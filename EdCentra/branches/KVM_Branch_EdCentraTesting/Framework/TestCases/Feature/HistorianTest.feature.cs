// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Edwards.Scada.Test.Framework.TestCases.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Historian")]
    public partial class HistorianFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "HistorianTest.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Historian", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
testRunner.Given("I opened EDCENTRA app url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
testRunner.When("I entered \'administrator\' and \'toolkit\' and clicked login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 6
testRunner.Then("Change the User Preference", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 7
testRunner.Then("I should be navigated to Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 8
testRunner.When("I clicked Device Explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
testRunner.Then("I should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 13
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
testRunner.And("Launched Eissa, started simulator and selected device type \'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Data Logging - Setup a data logging profile")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.TestCaseAttribute("Booster Current (A)", "1 Second", "1 Second", "3", "AEM CJ Temperature (K)", "1 Second", "1 Second", "5", null)]
        public virtual void DataLogging_SetupADataLoggingProfile(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string parameter1, string timeIntervalforNormal1, string timeIntervalforAlert1, string timeIntervalforDelta1, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "mytag",
                    "SplitServer",
                    "SingleServer",
                    "Historian"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Data Logging - Setup a data logging profile", null, @__tags);
#line 24
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 25
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\' \'{5}\' \'{" +
                        "6}\' \'{7}\'.Then Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta, parameter1, timeIntervalforNormal1, timeIntervalforAlert1, timeIntervalforDelta1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 35
testRunner.When("I adding more parameter unmark Show only parameters in profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
testRunner.Then("The Show only parameters in profile button unmark and all the parameters Param\'Bo" +
                    "oster Power (W)\' listed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 37
testRunner.When("I Check the checkbox entitled Show only parameters in profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
testRunner.Then(string.Format("The Only parameters \'{0}\' selected as present in the profile should be present", parameter1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
testRunner.When("I Find equipment using equipment description and add Equipments \'NEW0001PM1\' to A" +
                    "ssigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
testRunner.Then("the Changes have been applied message will be displayed on the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Data Logging - Rename Profile")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.TestCaseAttribute("AEM CJ Temperature (K)", "1 Second", "1 Second", "1", null)]
        public virtual void DataLogging_RenameProfile(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SplitServer",
                    "SingleServer",
                    "Historian"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Data Logging - Rename Profile", null, @__tags);
#line 50
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 51
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 55
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 59
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 61
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
testRunner.When("I Find equipment using equipment description and add Equipments \'NEW0001PM1\' to A" +
                    "ssigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
testRunner.Then("the Changes have been applied message will be displayed on the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 65
testRunner.When("I Select already created test data logging profile ProfileName\'LoggingTest\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
testRunner.Then("The Profile detail will be displayed ProfileName \'LoggingTest\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 67
testRunner.When("I Change the name of the profile Newprofilename \'RenameTest\' and click apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
testRunner.Then("The changes should be saved and Newprofilename \'RenameTest\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 69
testRunner.When("I delete the ProfileName\'RenameTest\' if profilename exist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
testRunner.Then("Ensure the ProfileName \'RenameTest\' is deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Data Logging - Duplicate Profile")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.TestCaseAttribute("AEM CJ Temperature (K)", "1 Second", "1 Second", "2", null)]
        public virtual void DataLogging_DuplicateProfile(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SplitServer",
                    "SingleServer",
                    "Historian"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Data Logging - Duplicate Profile", null, @__tags);
#line 78
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 79
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 81
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 83
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 85
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 86
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 87
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 89
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 91
testRunner.When("I Find equipment using equipment description and add Equipments \'NEW0001PM1\' to A" +
                    "ssigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
testRunner.Then("the Changes have been applied message will be displayed on the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 93
testRunner.When("I Select already created test data logging profile ProfileName\'LoggingTest\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
testRunner.Then("The Profile detail will be displayed ProfileName \'LoggingTest\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 95
testRunner.When("I Select a Logging profile \'LoggingTest\'and click the Duplicate button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 96
testRunner.Then("A dialog is opened displaying the profile name with Copy of prefixing the profile" +
                    " name, OK and Cancel buttons", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 97
testRunner.When("I Click cancel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 98
testRunner.Then("verify that the copy dialog is closed and the profile is not copied", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 99
testRunner.When("I Click the Duplicate button again", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 100
testRunner.Then("I get a dialog is opened displaying the profile name with Copy of prefixing the p" +
                    "rofile name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 101
testRunner.When("I click OK on the copy profile dialog and delete ProfileName\'LoggingTest\' already" +
                    " exist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 102
testRunner.Then("Verify that a new profile duplicatename \'Copy of LoggingTest\' is created with the" +
                    " same parameter\'AEM CJ Temperature (K)\' attributes as the original", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 103
testRunner.When("I delete the ProfileName\'Copy of LoggingTest\' if profilename exist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
testRunner.Then("Ensure the ProfileName \'Copy of LoggingTest\' is deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Data Logging - Delete Profile")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.TestCaseAttribute("AEM CJ Temperature (K)", "1 Second", "1 Second", "2", null)]
        public virtual void DataLogging_DeleteProfile(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SplitServer",
                    "SingleServer",
                    "Historian"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Data Logging - Delete Profile", null, @__tags);
#line 112
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 113
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 115
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 116
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 117
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 118
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 119
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 120
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 121
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 122
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 123
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 125
testRunner.When("I Find equipment using equipment description and add Equipments \'NEW0001PM1\' to A" +
                    "ssigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 126
testRunner.Then("the Changes have been applied message will be displayed on the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 127
testRunner.When("I Select already created test data logging profile ProfileName\'LoggingTest\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 128
testRunner.Then("The Profile detail will be displayed ProfileName \'LoggingTest\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 129
testRunner.When("I Click the delete button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
testRunner.Then("Verify that the delete profile dialog is opened with OK and Cancel buttons", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 131
testRunner.When("Click the Cancel button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 132
testRunner.Then("Verify that the delete dialog is closed and the profile is not deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 133
testRunner.When("I Click the delete button again", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 134
testRunner.Then("verify that the delete profile dialog is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 135
testRunner.When("I click OK on the delete dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 136
testRunner.Then("Ensure the profile profilename \'LoggingTest\' is deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Data Logging - Apply parameter selection")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        public virtual void DataLogging_ApplyParameterSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Data Logging - Apply parameter selection", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "Historian"});
#line 144
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 145
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 147
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 148
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 149
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 150
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 151
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 152
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 153
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 154
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 155
testRunner.When("I Find equipment using equipment description and add Equipments \'NEW0001PM1\' to A" +
                    "ssigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 156
testRunner.Then("the Changes have been applied message will be displayed on the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 157
testRunner.When("I Navigate to the details tab of a Data Logging profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 158
testRunner.Then("The details tab of a Data Logging profile displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 159
testRunner.When("Select a parameter from the list for logging by checking the Log Parameter\'AEM CJ" +
                    " Temperature (K)\' check box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
testRunner.Then("Green tick appears in checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 161
testRunner.When("Without clicking the apply button, navigate to another logging profile or another" +
                    " Edcentra window such as the Device Explorer, navigate back to the previous data" +
                    " logging profile\'LoggingTest\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 162
testRunner.Then("verify that the selected Parameter\'AEM CJ Temperature (K)\' Check box no longer ti" +
                    "cked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 163
testRunner.When("I select the same Parameter\'AEM CJ Temperature (K)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 164
testRunner.Then("I click the Apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 165
testRunner.When("Navigate away and back again to the selection Profile\'LoggingTest\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 166
testRunner.Then("Verify that the selection Parameter\'AEM CJ Temperature (K)\' has been remembered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Data Logging - Review the Logging Assignments")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.TestCaseAttribute("AEM CJ Temperature (K)", "1 Second", "1 Second", "4", null)]
        public virtual void DataLogging_ReviewTheLoggingAssignments(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SplitServer",
                    "SingleServer",
                    "Historian"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Data Logging - Review the Logging Assignments", null, @__tags);
#line 171
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 172
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 173
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 174
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 175
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 176
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 177
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 178
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 179
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 180
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 181
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 182
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 183
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 184
testRunner.When("I Find equipment using equipment description and add Equipments \'NEW0001PM1\' to A" +
                    "ssigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 185
testRunner.Then("the Changes have been applied message will be displayed on the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 186
testRunner.When("I Navigate to the details tab of a Data Logging profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 187
testRunner.Then("The details tab of a Data Logging profile displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 188
testRunner.When("I Click the Assignments button within Logging", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 189
testRunner.Then("The tab Logging is displayed showing a list of all equipment with logging profile" +
                    "s", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 190
testRunner.When("Click the Not Logging tab and All tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 191
testRunner.Then("The logging profiles should appear in black (when they have applied) or blue (whe" +
                    "n they are ‘in process’ just before they have been processed by the relevant age" +
                    "nt). Keep monitoring this page to check that the profile ‘goes black’.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Data Logging - Display effective logging and Refresh assignment")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.TestCaseAttribute("AEM CJ Temperature (K)", "1 Second", "1 Second", "2", null)]
        public virtual void DataLogging_DisplayEffectiveLoggingAndRefreshAssignment(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SplitServer",
                    "SingleServer",
                    "Historian"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Data Logging - Display effective logging and Refresh assignment", null, @__tags);
#line 199
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 200
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 201
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 202
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 203
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 204
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 205
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 206
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 207
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 208
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 209
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 210
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 211
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 212
testRunner.When("I Find equipment using equipment description and add Equipments \'NEW0001PM1\' to A" +
                    "ssigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 213
testRunner.Then("the Changes have been applied message will be displayed on the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 214
testRunner.When("I Navigate to the details tab of a Data Logging profile", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 215
testRunner.Then("The details tab of a Data Logging profile displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 216
testRunner.When("Click on the Display effective logging on this equipment icon (looks like a piece" +
                    " of paper with writting on it)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 217
testRunner.Then("After a few moments, a form will show detailing the logging regime applied", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 218
testRunner.When("Choose a profile and click on the refresh icon (two green arrows)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 219
testRunner.Then("The entry should display blue with an animated refresh gif in place of the green " +
                    "tick", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Historian - Equipment Data Filter")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.TestCaseAttribute("AEM CJ Temperature (K)", "1 Second", "1 Second", "3", "NEW0001PM1", "Dry Pump Current (3)", "Booster Power (8)", "Booster Power", "Dry Pump Current", "NEW0001PM1:Booster Power (8)", "NEW0001PM1:Dry Pump Current (3)", null)]
        public virtual void Historian_EquipmentDataFilter(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string equipmentName, string parameter1, string parameter2, string parameterName1, string parameterName2, string parameterName3, string parameterName4, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SplitServer",
                    "SingleServer",
                    "Historian"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Historian - Equipment Data Filter", null, @__tags);
#line 227
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 228
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 229
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 230
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 231
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 232
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 233
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 234
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 235
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 236
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 237
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 238
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 239
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 240
testRunner.When("I Find equipment using equipment description and add Equipments \'NEW0001PM1\' to A" +
                    "ssigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 241
testRunner.Then("the Changes have been applied message will be displayed on the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 242
testRunner.When("Click Historian ->Equipment Data tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 243
testRunner.Then("Equipment Data tab should be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 244
testRunner.When("I Select date range StartDate and mark only Parameter Data check box.Ummark Alert" +
                    "s and Equipment Status.Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 245
testRunner.Then("Select Device Explorer folder on Systems list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 246
testRunner.When(string.Format("Expand the folder and Select single Equipment \'{0}\' in the tree", equipmentName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 247
testRunner.Then(string.Format("The Parameter\'{0}\' for that equipment\'{1}\' will be displayed in the parameter\'s l" +
                        "ist", parameter1, equipmentName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 248
testRunner.When(string.Format("Click on of the parameter\'{0}\' and click Add button at the bottom of the paramete" +
                        "r list", parameter2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 249
testRunner.Then(string.Format("Grid tab should display values for selected equipment\'{0}\' and selected parameter" +
                        "\'{1}\'", equipmentName, parameterName1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 250
testRunner.When("Click on the Graph tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 251
testRunner.Then(string.Format("The Graph tab should display graph of selected parameter\'{0}\' values against date" +
                        " and time", parameterName3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 252
testRunner.And("Alerts raised against a Parameter \'8          (Booster Power)\' AlertType \'HighAla" +
                    "rm\' AlertCode \'IDS_25_ALERT_1_0 (System configuration fault)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
testRunner.When("Mark the Alerts and Equipment Status check box on top and click [Apply]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 254
testRunner.Then("Both the Grid and Graph tabs should display values of Alerts Message\'Booster Powe" +
                    "r\' and Equipment status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 255
testRunner.When("Clear alert against a Parameter \'8          (Booster Power)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 256
testRunner.When(string.Format("Add one more parameter\'{0}\'to the list", parameter1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 257
testRunner.Then(string.Format("Both the Grid and Graph tabs should display values of newly added parameter as we" +
                        "ll as previously added parameter\'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\'", equipmentName, parameterName1, parameterName2, parameterName3, parameterName4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Data Extraction Utility - Daily Extraction")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.TestCaseAttribute("AEM CJ Temperature (K)", "1 Second", "1 Second", "1", null)]
        public virtual void DataExtractionUtility_DailyExtraction(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SplitServer",
                    "SingleServer",
                    "Historian"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Data Extraction Utility - Daily Extraction", null, @__tags);
#line 265
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 266
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 267
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 268
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 269
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 270
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 271
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 272
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 273
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 274
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 275
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 276
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 277
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 278
testRunner.When("I Find equipment using equipment description and add Equipments \'NEW0001PM1\' to A" +
                    "ssigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 279
testRunner.Then("the Changes have been applied message will be displayed on the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 280
testRunner.When("Go to Historian->Data Extraction Utility", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 281
testRunner.Then("The Data Extraction Utility tab should be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 282
testRunner.When("Click on Enable Daily Extraction Utility", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 283
testRunner.Then("Click Settings button and check some filtering option dialogs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 284
testRunner.When("I click on [Save]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 285
testRunner.Then("The settings screen shall hide, later tests will verify the settings have been ma" +
                    "de", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 286
testRunner.When("Select some equipment via Change Selection button on under Selected Systems list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 287
testRunner.Then("Search Equipments using a variety of search conditions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 288
testRunner.When("some System\'NEW0001PM1\' are selected, click on the move button (either [>] or [>>" +
                    "])", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 289
testRunner.Then("The selected equipment\'NEW0001PM1\' should appear in the ride hand pane", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 290
testRunner.When("click on the Apply Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 291
testRunner.Then("Extraction system settings screen shall hide", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 292
testRunner.When("Select some Groups via Change Selection button on under Selected Groups list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 293
testRunner.And("Mark groups under either PTCs, User folders and Equipment Type node", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
testRunner.And("Click on the Apply Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
testRunner.And("I Click on the Save Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 296
testRunner.Then("The Extraction system settings screen shall hide", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 297
testRunner.When("Return to the EdCentra Home screen, then return to daily extraction utility (spec" +
                    "ifically the Daily Extraction Settings button.)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 298
testRunner.Then("The settings previously made System\'NEW0001PM1\' and Group \'PTCs\' \'Equipment Type\'" +
                    "should be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Data Extraction Utility - Historic Extraction")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.CategoryAttribute("DBServer")]
        [NUnit.Framework.TestCaseAttribute("AEM CJ Temperature (K)", "1 Second", "1 Second", "2", null)]
        public virtual void DataExtractionUtility_HistoricExtraction(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SingleServer",
                    "Historian",
                    "DBServer"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Data Extraction Utility - Historic Extraction", null, @__tags);
#line 306
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 307
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 308
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 309
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 310
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 311
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 312
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 313
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 314
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 315
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 316
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 317
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 318
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 319
testRunner.When("I Find equipment using equipment description and add Equipments \'NEW0001PM1\' to A" +
                    "ssigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 320
testRunner.Then("the Changes have been applied message will be displayed on the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 321
testRunner.When("Check some filtering option for Row data. Type in Description and select start an" +
                    "d End date.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 322
testRunner.Then("The changes previously made should be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 323
testRunner.When("Select some equipment via Change Selection button on under Selected Systems list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 324
testRunner.Then("Search Equipments using a variety of search conditions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 325
testRunner.When("some System\'NEW0001PM1\' are selected, click on the move button (either [>] or [>>" +
                    "])", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 326
testRunner.Then("The selected equipment\'NEW0001PM1\' should appear in the ride hand pane", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 327
testRunner.When("click on the Apply Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 328
testRunner.Then("Extraction system settings screen shall hide", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 329
testRunner.When("Select some Groups via Change Selection button on under Selected Groups list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 330
testRunner.And("Mark groups under either PTCs, User folders and Equipment Type node", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 331
testRunner.And("I Click on the Apply Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 332
testRunner.Then("The selected equipment should appear in Selected System\'NEW0001PM1\' list The sele" +
                    "cted Group\'PTCs\' \'Equipment Type\' should appear in the selected groups list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 333
testRunner.When("press [Extract]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 334
testRunner.Then("A message stating The Historic Extraction Utility is currently extracting should " +
                    "display with a wait icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 335
testRunner.When("Once the extraction is complete, look on the local file system of the server unde" +
                    "r path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 336
testRunner.Then("There should be a folder named yyyy-mm-dd inside of which should be a ZIP file wi" +
                    "th the same filename and its contains CSV files", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Reports - Swap Out Report Display")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.TestCaseAttribute("AEM CJ Temperature (K)", "1 Second", "1 Second", "2", null)]
        public virtual void Reports_SwapOutReportDisplay(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SplitServer",
                    "SingleServer",
                    "Historian"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Reports - Swap Out Report Display", null, @__tags);
#line 344
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 345
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 346
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 347
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 348
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 349
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 350
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 351
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 352
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 353
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 354
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 355
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 356
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 357
testRunner.When("I Find equipment using equipment description and add Equipments \'NEW0001PM1\' to A" +
                    "ssigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 358
testRunner.Then("the Changes have been applied message will be displayed on the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 359
testRunner.When("Select the Equipment Software Survey report from the list of reports", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 360
testRunner.Then("A tree showing the current groups and folders to be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 361
testRunner.When("Select the node containing the EISSA simulated devices System\'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 362
testRunner.Then("A swirling icon indicating that the graph is running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 363
testRunner.And("Wait for the swiling icon to disappear", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Historian - Graphing")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.TestCaseAttribute("AEM CJ Temperature (K)", "1 Second", "1 Second", "3", null)]
        public virtual void Historian_Graphing(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SplitServer",
                    "SingleServer",
                    "Historian"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Historian - Graphing", null, @__tags);
#line 372
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 373
testRunner.When("I selected the equipment type, entered equipmentName\'NEW0001PM1\' \'NEW0001PM2\' \'NE" +
                    "W0001PM3\', Cliked Find Equipment button, selected one equipment and clicked Add " +
                    "button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 374
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 375
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 376
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 377
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 378
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 379
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 380
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 381
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 382
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 383
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 384
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 385
testRunner.When("I Find equipment using equipment description and add Equipment\'NEW0001PM3\' to Ass" +
                    "igned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 386
testRunner.Then("The assigned Equipment\'NEW0001PM3\' should appear in the ride hand pane and I clic" +
                    "k apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 387
testRunner.When("Navigate to Historian -> Equipment Data Select a piece of System and Equipment \'N" +
                    "EW0001PM1\' that is logging data (and also of which you have another of this exac" +
                    "t equipment type)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 388
testRunner.Then("Parameter\'Exhaust Gas Temperature (56)\'listed of which we have data to plot for E" +
                    "quipment\'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 389
testRunner.When("Select at least one Parameter\'Booster Power (8)\' that has logged data, preferably" +
                    " an analogue parameter such as Temperature, Power, Speed etc. You can multi-sele" +
                    "ct by holding the ctrl key down while selecting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 390
testRunner.Then("Click the lock button when you selection is complete (the one with the closed pad" +
                    "lock symbol)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 391
testRunner.When("Data for all selected Parameter\'Booster Power\' is shown in the data grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 392
testRunner.Then("Lock icon turns to an unlock icon (with an open padlock icon)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 393
testRunner.When("I click  the Graph tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 394
testRunner.Then("Graph is displayed with your selection of Parameter\'NEW0001PM1:Booster Power (8)\'" +
                    " plot against each other", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 395
testRunner.When("Choose another System\'NEW0001PM2\' of the same type from the system tree", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 396
testRunner.Then("if you have previously plot parameters from a Turbo device, you musts select a di" +
                    "fferent Turbo device Parameter\'DP End Cover Temp (57)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 397
testRunner.When("Graph is redrawn but with Parameter\'NEW0001PM2:Booster Power (8)\' substituted in " +
                    "from the newly selected system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 398
testRunner.Then("Click the unlock button (with an open padlock icon)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 399
testRunner.When("select any other System\'NEW0001PM3\'from the system tree", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 400
testRunner.Then("Graph should not refresh and substitute parameters\'NEW0001PM2:Booster Power (8)\' " +
                    "as before. It should keep whatever parameters were previously selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 401
testRunner.When("allow you from any other System\'NEW0001PM3\' to add any others Parameter\'Exhaust P" +
                    "ressure (39)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 402
testRunner.Then("Graph should redrawn with Parameter\'NEW0001PM3:Exhaust Pressure (39)\' substituted" +
                    " in from the newly selected system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 403
testRunner.When("Click the Edit Parameters button below the graph", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 404
testRunner.Then("Edit parameters box opens with a remove option for each parameter and an editor f" +
                    "or the Lower and Upper limit of each unit type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 405
testRunner.When("Change the lower LowerValue\'20\' and/or upper UpperValue\'60\' limit for a unit then" +
                    " click the Apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 406
testRunner.And("Click the clear button underneath the graph", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 407
testRunner.Then("All your parameters selections are removed and graph is hidden", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 408
testRunner.When("Select a System \'NEW0001PM1\' which has Equipment Events", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 409
testRunner.Then("The parameter list, an entry called Parameter \'Equipment Status\' should appear, a" +
                    "long with any other parameters that have been logging", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 410
testRunner.When("I Choose Parameter \'Equipment Status\' and click the Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 411
 testRunner.Then(@"Graph should show with equipment statuses Parameter'Equipment Status' plot on it. If the values tab is selected instead of the graph, click the Graph tab to show it. Also the Equipment Status checkbox at the top should automatically be ticked when you added the Equipmentt Status item.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("load and save current historian graph")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.TestCaseAttribute("AEM CJ Temperature (K)", "1 Second", "1 Second", "1", null)]
        public virtual void LoadAndSaveCurrentHistorianGraph(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SplitServer",
                    "SingleServer",
                    "Historian"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("load and save current historian graph", null, @__tags);
#line 419
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 420
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 421
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 422
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 423
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 424
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 425
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 426
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 427
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 428
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 429
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 430
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 431
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 432
testRunner.When("I Find equipment using equipment description and add Equipments \'NEW0001PM1\' to A" +
                    "ssigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 433
testRunner.Then("the Changes have been applied message will be displayed on the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 434
testRunner.When("Log into EdCentra with an account that has acess to historian. Click on the Histo" +
                    "rian icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 435
testRunner.Then("The historian page will appear. Thre will be a button [Load Saved Graph] on the t" +
                    "oolbar. This button will be disabled if there are not already some graphs saved " +
                    "for the current user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 436
testRunner.When("Choose a System and plot some Equipment\'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 437
testRunner.Then("The Equipment\'NEW0001PM1\' Parameter\'Booster Power (8)\' listed of which we have da" +
                    "ta to plot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 438
testRunner.When("Select at least one Parameter\'Booster Power (8)\' data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 439
testRunner.Then("The button [Save Graph] will appear at the bottom of the graph next to the [Clear" +
                    " Button]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 440
testRunner.When("Click the [Save Graph] button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 441
testRunner.Then("The save graph modal dialog will appear. The comments box will be populated with " +
                    "the system id and the parameters previosuly selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 442
testRunner.When("Click [Cance] in the save graph modal dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 443
testRunner.Then("The modal dialog is hidden", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 444
testRunner.When("Click the [Save Graph] button and click [OK] without entering a name in the Name " +
                    "field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 445
testRunner.Then("Message\'Name cannot be blank!\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 446
testRunner.When("Enter a name in the GraphName \'TestingGraph\' field and click [OK]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 447
testRunner.Then("The Message \'TestingGraph : Save was successful\'is displayed in the toolbar next " +
                    "to the Load Saved Graph button/ The Load Saved Graph button is now enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 448
testRunner.When("Click [Clear] to clear the graph", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 449
testRunner.Then("The graph are is cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 450
testRunner.When("Click [Load Saved Graph]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 451
testRunner.Then("The load saved graph modal dialog is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 452
testRunner.When("Click [Cancel]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 453
testRunner.Then("The modal dialog is closed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 454
testRunner.When("Click the [Load Saved Graph] button and choose the GraphName\'TestingGraph\' in the" +
                    " dropdown box. Click [OK]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 455
testRunner.Then("The modal dialog is closed and the graph is displayed using the start date, end d" +
                    "ate, Parameter \'NEW0001PM1\' \'Booster Power (8)\', zoom level and axis and systems" +
                    " previously saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 456
testRunner.When("Click [Save Graph] and [OK]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 457
testRunner.Then("The Message\'Unable to save graph, the name already exists. Would you like to over" +
                    "write the existing graph ?\' is displayed. Yes and No buttons are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 458
testRunner.When("I Click No", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 459
testRunner.Then("The buttons are reverted to their previous state of OK and Cancel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 460
testRunner.When("I Click [OK] and [Yes]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 461
testRunner.Then("The modal dialog is closed and the success Message\'TestingGraph : Save was succes" +
                    "sful\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 462
testRunner.When("I Click the [Save Graph] button and choose a GraphName \'TestingGraph\' field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 463
testRunner.And("I Click [Delete graph]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 464
testRunner.And("Create and save some more graphs using different System \'NEW0001PM1\' and Paramete" +
                    "r\'Dry Pump Current (3)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 465
testRunner.And("Click the [Save Graph] button and Enter a name in the GraphName \'DuplicateGraphTe" +
                    "sting\' field and click [OK]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 466
testRunner.And("Click [Load Saved Graph] and choose a GraphName\'DuplicateGraphTesting\' from the l" +
                    "ist. Click [Delete graph]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 467
testRunner.Then("The message Graph deleted successfully is displayed. The item is removed from the" +
                    " list. If the item was the last item in the list the modal dialog is closed. The" +
                    " [Load Saved Graph] button will be disabled if all of the saved graphs have been" +
                    " removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 468
testRunner.When("I Opened the User Manager application, and click on the ‘Maintain Users’ tab.Clic" +
                    "k on Create User link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 469
testRunner.Then("Create User form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 470
testRunner.When("I Clicked Create", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 471
testRunner.Then("The Required Field text should appear besides User Name, Password, confirm, First" +
                    " Name, Last Name and e-mail field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 472
testRunner.When("added new User with details \'historianuser\' \'Test@123\' \'Test@123\' \'Client Name\' \'" +
                    "Edward\' \'historian\' \'testuser\' and \'historianuser@atlascopco.com\' in Create user" +
                    " form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 473
testRunner.Then("I Provided all application permissions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 474
testRunner.When("I got logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 475
testRunner.Then("I logon as the newly created user userName \'historianuser\' and password \'Test@123" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 476
testRunner.When("I navigate to the historian page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 477
testRunner.Then("The Load Saved Graph Button will be disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 478
testRunner.And("I enter Administrator login again username as \'administrator\' and password as \'to" +
                    "olkit\' and clicked login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Report-Check data return in Alert report")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.TestCaseAttribute("AEM CJ Temperature (K)", "1 Second", "1 Second", "2", null)]
        public virtual void Report_CheckDataReturnInAlertReport(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SplitServer",
                    "SingleServer",
                    "Historian"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Report-Check data return in Alert report", null, @__tags);
#line 488
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 489
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 490
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 491
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 492
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 493
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 494
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 495
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 496
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 497
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 498
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 499
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 500
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 501
testRunner.When("I Find equipment using equipment description and add Equipments \'NEW0001PM1\' to A" +
                    "ssigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 502
testRunner.Then("The assigned Equipment\'NEW0001PM1\' should appear in the ride hand pane and I clic" +
                    "k apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 503
testRunner.When("Ensure that simulators are running which result in some alerts evident for Parame" +
                    "ter \'7          (Booster Current)\' \'8          (Booster Power)\' \'9          (MB " +
                    "MotorTemperature)\'AlertType \'Advisory\' \'HighWarning\' \'HighAlarm\' in Live alerts " +
                    "List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 504
testRunner.Then("Live alerts present for x number of devices", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 505
testRunner.When("Navigate to reports", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 506
testRunner.Then("execute the Alert report for Equipment\'NEW0001PM1\' you know has alerts against it" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 507
testRunner.And("Ensure the Equipment\'NEW0001PM1\' is not in maintenance mode", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate Location or Notes information in Historian tab")]
        [NUnit.Framework.TestCaseAttribute("DP End Cover Temp (ºC)", "1 Second", "1 Second", "3", null)]
        public virtual void ValidateLocationOrNotesInformationInHistorianTab(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Location or Notes information in Historian tab", null, exampleTags);
#line 513
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 514
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 515
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 516
testRunner.When("I set the User Preferences of Temperature unit to Centigrade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 517
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 518
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 519
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 520
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 521
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 522
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 523
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 524
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 525
testRunner.When("I click on Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 526
testRunner.Then("I should be navigated to Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 527
testRunner.When("I clicked on Home Icon in top navigation menubar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 528
testRunner.When("I clicked Device Explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 529
testRunner.And("I clicked on Top Level link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 530
testRunner.Then("I should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 531
testRunner.When("I clicked the header of the folder and this choose Edit Notes/Location", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 532
testRunner.Then("Edit Notes/Location pop-up should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 533
testRunner.When("I enter notes as \"Testing Notes\" on the EditNotesLocation section and click apply" +
                    " button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 534
testRunner.Then("notes should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 535
testRunner.When("Click Historian ->Equipment Data tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 536
testRunner.Then("Equipment Data tab should be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 537
testRunner.And("Select Device Explorer folder on Systems list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 538
testRunner.When("hover on the folder name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 539
testRunner.Then("the note \"Testing Notes\" should be displayed while hover on the folder name on th" +
                    "e Historian page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Historian - Filter SerialNumber")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("Historian")]
        [NUnit.Framework.TestCaseAttribute("AEM CJ Temperature (K)", "10 Seconds", "10 Seconds", "3", null)]
        public virtual void Historian_FilterSerialNumber(string parameter, string timeIntervalforNormal, string timeIntervalforAlert, string timeIntervalforDelta, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SplitServer",
                    "SingleServer",
                    "Historian"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Historian - Filter SerialNumber", null, @__tags);
#line 548
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 549
testRunner.When("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 550
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 551
testRunner.When("I Within the [Configure \\/] menu, click the Logging option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 552
testRunner.Then("the Logging tab is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 553
testRunner.When("I Click on Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 554
testRunner.Then("the Create Profile form is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 555
testRunner.When("Provide a name\'LoggingTest\' and select an equipment type\'iXH DryPump\' for the pro" +
                    "file. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 556
testRunner.Then("The form expand and shows detail tab which lists parameter for the equipment type" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 557
testRunner.When(string.Format("I Make a number of selections from the list of available parameters and change th" +
                        "e values for the Normal, Alert, and Delta \'{0}\' \'{1}\' \'{2}\' \'{3}\'.Click Apply.", parameter, timeIntervalforNormal, timeIntervalforAlert, timeIntervalforDelta), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 558
testRunner.Then(string.Format("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                        "arameter.The screen will only list parameters\'{0}\' added in profile", parameter), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 559
testRunner.When("Navigate to Historian -> Equipment Data Select a piece of System and Equipment \'N" +
                    "EW0001PM1\' that is logging data (and also of which you have another of this exac" +
                    "t equipment type)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 560
testRunner.And("I select \'Serial #\' option from the filter dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 561
testRunner.And("I enter the value \'Test\' in the filter text box and click apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 562
testRunner.Then("the search serial number grid will appear with the data filtered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 563
testRunner.When("I select any single system on the filtered serial number data and click Apply but" +
                    "ton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 564
testRunner.Then("the filtered system should alone appear under Systems folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

