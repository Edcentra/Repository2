// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Edwards.Scada.Test.Framework.TestCases.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("SetupTests")]
    public partial class SetupTestsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SetUpTests.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SetupTests", "\tVerfiry Enable as many different agent types as possible.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
testRunner.Given("I opened EDCENTRA app url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
testRunner.When("I entered \'administrator\' and \'toolkit\' and clicked login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 7
testRunner.Then("Change the User Preference", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Setup - Some Web Devices Data")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        [NUnit.Framework.CategoryAttribute("SetUp")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void Setup_SomeWebDevicesData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setup - Some Web Devices Data", null, new string[] {
                        "mytag",
                        "SetUp",
                        "SingleServer"});
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 13
testRunner.When("I clicked Device Explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
testRunner.Then("I should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 18
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
testRunner.When("Launch the EISSA tool and specify ten devices with six pumps", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
testRunner.Then("Ensure that Log is checked on the EISSA screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 24
testRunner.When("Click on the green play button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
testRunner.Then("Log entries in the log window, eventually served: Equipment log entries", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
testRunner.When("Uncheck Log", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
testRunner.Then("The log window to stop refreshing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
testRunner.When("Click on Edit -> Adjustables", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
testRunner.Then("The adjustables window to show", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
testRunner.When("Use the [Load] button to load the adjustables file \'EISSASystemTestConfiguration_" +
                    "Adjustables.adj\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
testRunner.Then("The file to load and show entries \'35 (TE406 Combustor Temperature)\' \'70 (Sleep R" +
                    "equest)\' \'12 (Booster Control)\' \'174 (MB Inverter Speed)\' \'941 (External TMS Zon" +
                    "e 7 Power)\' \'936 (External TMS Zone 6 Temp)\'in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Setup - Some Turbo Devices Data")]
        [NUnit.Framework.CategoryAttribute("SetUp")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.TestCaseAttribute("T4001", "Turbo Pump", "4001", "T4002", "4002", "T4003", "4003", "T4004", "4004", "T4005", "4005", null)]
        public virtual void Setup_SomeTurboDevicesData(string equipment1, string equipmentType, string iPPortNumber1, string equipment2, string iPPortNumber2, string equipment3, string iPPortNumber3, string equipment4, string iPPortNumber4, string equipment5, string iPPortNumber5, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SetUp",
                    "SingleServer"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setup - Some Turbo Devices Data", null, @__tags);
#line 36
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 37
testRunner.When("Start the turbo simulator and get it to start listening on ports", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
testRunner.Then("The simulator should spin up and, once the port range has been entered, show some" +
                    "thing again and minimize", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
testRunner.When("I clicked Device Explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
testRunner.Then("I should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 44
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
testRunner.And(string.Format("Login to FabWorks and show the Turbo \'{0}\' creation test script", equipmentType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
testRunner.Then("You should be presented with the opportunity to enter the following details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 50
testRunner.When("Enter the data as equipment Name \'T4000\' equipmentType \'Turbo Pump\' device iPPort" +
                    "Number\'4000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
testRunner.Then("The turbo devices should be created. Messages should be shown in the Turbo Simula" +
                    "tor indicating that connections are being made", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
testRunner.When(string.Format("Use Device Explorer and create a folder named then add as many turbos\'{0}\' \'{1}\' " +
                        "\'{2}\' \'{3}\' \'{4}\' \'{5}\' \'{6}\' \'{7}\' \'{8}\' \'{9}\' \'{10}\'", equipment1, equipmentType, iPPortNumber1, equipment2, iPPortNumber2, equipment3, iPPortNumber3, equipment4, iPPortNumber4, equipment5, iPPortNumber5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
testRunner.Then(string.Format("New turbos\'{0}\' Alert \'19\' and \'{1}\' to be created", equipment3, iPPortNumber3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Setup - Some EADS events")]
        [NUnit.Framework.CategoryAttribute("SetUp")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.TestCaseAttribute("Dnl", "EXT", "MUM (Dnl and EXT)", "PCE", "PCP", "model_Dnl.xml", "model_GradientBased_EXT.xml", "model_MultiModel_Dnl_EXT.xml", "process_counter_ecolink_sample_model_with_diag_inhibit_and_alert_strings.xml", "process_counter_pump_sample_model_2min_timewindow.xml", null)]
        public virtual void Setup_SomeEADSEvents(string profile1, string profile2, string profile3, string profile4, string profile5, string model1, string model2, string model3, string model4, string model5, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SetUp",
                    "SingleServer"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setup - Some EADS events", null, @__tags);
#line 61
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 62
testRunner.When("open the DSPU and open ADS_SystemTest Scenario \'DSPU_scenario.xml\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
testRunner.Then("DSPU should show \'ExhaustGasTemp\' in cell \'1\' the complex ADS scenario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 64
testRunner.When("Start the ADS scenario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
testRunner.Then("Several graphs should be displayed whilst the scenario is running", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 66
testRunner.When("wait 30 seconds and then Stop the scenario when some data points have been displa" +
                    "yed in the graph", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
testRunner.Then("They should disappear when the scenario is stopped", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 68
testRunner.When(string.Format("Login to EdCentra, select the Predictive Maintenance -> Import Profile and upload" +
                        " the following models \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\' \'{5}\' \'{6}\' \'{7}\' \'{8}\' \'{9}" +
                        "\'", profile1, model1, profile2, model2, profile3, model3, profile4, model4, profile5, model5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
testRunner.Then(string.Format("After a period of upto two minutes, the ADS\'{0}\' \'{1}\' list should populated with" +
                        " the models uploaded", profile1, profile2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 70
testRunner.When(string.Format("Associate the iXH device \'ADSSystemTesting\' with all the models uploaded \'{0}\' \'{" +
                        "1}\' \'{2}\' \'{3}\' \'{4}\'", profile1, profile2, profile3, profile4, profile5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
testRunner.Then(string.Format("The UI should show iXH device \'ADSSystemTesting\' with all the models uploaded \'{0" +
                        "}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\' that the associations have been made", profile1, profile2, profile3, profile4, profile5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 72
testRunner.When("Start the DSPU scenario \'DSPU_scenario.xml\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
testRunner.Then("DSPU graphs should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Setup - Availability Data")]
        [NUnit.Framework.CategoryAttribute("SetUp")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void Setup_AvailabilityData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setup - Availability Data", null, new string[] {
                        "SetUp",
                        "SingleServer"});
#line 81
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 82
testRunner.When("open the DSPU and open Availability Mode Scenario \'DSPU_scenario.xml\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
testRunner.And("Execute the DSPU scenario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
testRunner.Then("The scenario should run and show the Swap Out Generator form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 85
testRunner.When("After a second, select \'iQ DryPump\' [New System Type] DDL and click on [Swapout]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Setup -Availability Data Verification")]
        [NUnit.Framework.CategoryAttribute("SetUp")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void Setup_AvailabilityDataVerification()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setup -Availability Data Verification", null, new string[] {
                        "SetUp",
                        "SingleServer"});
#line 89
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 90
testRunner.When("run query and read data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Setup - Turn on Agent(s)")]
        [NUnit.Framework.CategoryAttribute("SetUp")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void Setup_TurnOnAgentS()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setup - Turn on Agent(s)", null, new string[] {
                        "SetUp",
                        "SingleServer"});
#line 94
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 95
testRunner.When("I clicked Device Explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 96
testRunner.Then("I should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 97
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 98
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 100
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 101
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 102
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 103
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
testRunner.And("Launched Eissa, started simulator and selected device type \'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
testRunner.Then("the log should show Web pages being served", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 107
testRunner.When("run the Turbo simulator to get some Turbo devices communicating", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 108
testRunner.Then("the console window should show connectivety established the data as equipment Nam" +
                    "e \'T4000\' equipmentType \'Turbo Pump\' device iPPortNumber\'4000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 109
testRunner.And("New turbo show connectivety established the data \'T4000\' Alert \'19\' and \'4000\' to" +
                    " be created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Setup - Add Folders and Systems")]
        [NUnit.Framework.CategoryAttribute("SetUp")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void Setup_AddFoldersAndSystems()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setup - Add Folders and Systems", null, new string[] {
                        "SetUp",
                        "SingleServer"});
#line 113
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 114
testRunner.When("I clicked Device Explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 115
testRunner.Then("I should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 116
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 119
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 120
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 121
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 122
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
testRunner.And("Launched Eissa, started simulator and selected device type \'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
testRunner.And("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 127
testRunner.When("Click a communicating piece of equipment\'NEW0001PM1\' that has parameters (again, " +
                    "below the name / header) to show the SEV", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 128
testRunner.Then("SEV window shows. The Parameter data should be coming through. If the parameter b" +
                    "oxes are grey and there are no values, Wait for a few seconds(no more than 30) f" +
                    "or the data to come through", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 129
testRunner.When("Each default parameter displayed on the Overview tab, using EISSA, change \'54    " +
                    "      (MB Temp)\' value to \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
testRunner.Then("Presuming the parameter data is varying from the equipment or simulator, every fe" +
                    "w seconds you should see updated parameter value\'2 K\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Setup - Maintenance Mode")]
        [NUnit.Framework.CategoryAttribute("SetUp")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void Setup_MaintenanceMode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setup - Maintenance Mode", null, new string[] {
                        "SetUp",
                        "SingleServer"});
#line 134
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 135
testRunner.When("I clicked Device Explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 136
testRunner.Then("I should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 137
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 140
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 141
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 142
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 143
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
testRunner.And("Launched Eissa, started simulator and selected device type \'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
testRunner.And("Entered equipment name, selected the equipment type,cliked find equipment button," +
                    " selected one by one equipments \'NEW0001PM1\' \'NEW0001PM2\' \'NEW0001PM3\' \'NEW0001P" +
                    "M4\' \'NEW0001PM5\' and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
testRunner.Then("Grab the system \'[WEB]\' id of every iXH for the test", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 148
testRunner.When("open the DSPU and open Maintenance Mode Scenario \'DSPU_New Scenario.xml\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 149
testRunner.Then("Update the Triangle Wave DS and ensure that the System ID GUID in the EquipmentEv" +
                    "entDetails field is the system id of an iXH registered with FabWorks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

