// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Edwards.Scada.Test.Framework.TestCases.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CDITest")]
    public partial class CDITestFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CDITestFeature.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CDITest", "The ability to restrict access control to CDI configuration tool by requesting au" +
                    "thenticating PIN code to unlock access.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
testRunner.Given("I opened EDCENTRA app url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
testRunner.When("I entered \'administrator\' and \'toolkit\' and clicked login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 7
testRunner.When("I clicked Device Explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
testRunner.Then("I should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CDI Config Tool to have simple authentication")]
        [NUnit.Framework.CategoryAttribute("ApplicationServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void CDIConfigToolToHaveSimpleAuthentication()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CDI Config Tool to have simple authentication", null, new string[] {
                        "ApplicationServer",
                        "SingleServer"});
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 13
testRunner.When("We have access to EdCentra new version installation environment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
testRunner.Then("EdCentra is installed sucessfully, which also contains CDI EXPORT by default.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
testRunner.When("Run CDI_Win.exe which is normally located in Local drive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
testRunner.Then("CDI config tool (CDI_Win) presents a login window requesting login entry.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "password"});
            table1.AddRow(new string[] {
                        "Administrator",
                        "toolkit"});
#line 17
testRunner.When("valid Password is provided, the user is presented with the main application windo" +
                    "w.", ((string)(null)), table1, "When ");
#line 20
testRunner.And("I Close the CDI window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "password1",
                        "password2",
                        "password3"});
            table2.AddRow(new string[] {
                        "Administrator",
                        "Toolkit",
                        "!Toolkit",
                        "!kittool"});
#line 21
testRunner.Then("user attempts three invalid PIN codes, the login process is terminated.", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify CDI Jobs in SQL and CDI in Maintenance Logs")]
        [NUnit.Framework.CategoryAttribute("ApplicationServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void VerifyCDIJobsInSQLAndCDIInMaintenanceLogs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify CDI Jobs in SQL and CDI in Maintenance Logs", null, new string[] {
                        "ApplicationServer",
                        "SingleServer"});
#line 28
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 29
testRunner.When("I launch SQl Server Managment Studio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
testRunner.And("using SQL Management Studio, log on with sa accounts using SQL Server Authenticat" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
testRunner.And("I expand \'SQL Server Agent\' in Database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
testRunner.Then("the Jobs \"EADS | Generate Daily Execution\" and \"EADS | Run Data Export Executions" +
                    "\" should exist under Sql Server Agent", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
testRunner.And("check CDI folder exists under \'G:\\fs_maintenance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
testRunner.And("check packages folder exists under \'D:\\Edwards\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A CDI Export should not run if equipment filter not set up")]
        [NUnit.Framework.CategoryAttribute("ApplicationServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void ACDIExportShouldNotRunIfEquipmentFilterNotSetUp()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A CDI Export should not run if equipment filter not set up", null, new string[] {
                        "ApplicationServer",
                        "SingleServer"});
#line 38
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 39
testRunner.When("Run CDI_Win.exe which is normally located in Local drive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
testRunner.Then("CDI config tool (CDI_Win) presents a login window requesting login entry.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "password"});
            table3.AddRow(new string[] {
                        "Administrator",
                        "toolkit"});
#line 41
testRunner.When("valid Password is provided, the user is presented with the main application windo" +
                    "w.", ((string)(null)), table3, "When ");
#line 44
testRunner.When("I click on Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
testRunner.And("I remove all the equipment filters if exist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
testRunner.When("I launch SQl Server Managment Studio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
testRunner.And("using SQL Management Studio, log on with sa accounts using SQL Server Authenticat" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
testRunner.And("I expand \'SQL Server Agent\' in Database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
testRunner.And("run the Job \"EADS | Generate Daily Execution\" manually", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.Then("there should not be any entry in Daily Data Export", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 51
testRunner.And("there should not be any data export folder exist in directory \"G:\\fs_Maintenance\\" +
                    "CDI\\CDI_Export\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.And("open the file \"G:\\fs_Maintenance\\CDI\\GenerateDailyExecution.txt\" and check the te" +
                    "xt \"Equipment Fitler for Daily Export is not setup.\" exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Zipping functionality in Edcentra CDI")]
        [NUnit.Framework.CategoryAttribute("ApplicationServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void VerifyZippingFunctionalityInEdcentraCDI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Zipping functionality in Edcentra CDI", null, new string[] {
                        "ApplicationServer",
                        "SingleServer"});
#line 56
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 57
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 60
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 62
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
testRunner.And("Launched Eissa and started simulator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
testRunner.And("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 68
testRunner.When("Selected added \'NEW0001PM1\' device", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
testRunner.Then("I should be navigated to SEV page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 70
testRunner.When("Run CDI_Win.exe which is normally located in Local drive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
testRunner.Then("CDI config tool (CDI_Win) presents a login window requesting login entry.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "password"});
            table4.AddRow(new string[] {
                        "Administrator",
                        "toolkit"});
#line 72
testRunner.When("valid Password is provided, the user is presented with the main application windo" +
                    "w.", ((string)(null)), table4, "When ");
#line 75
testRunner.When("I click on Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
testRunner.And("I add the equipments to the Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
testRunner.When("I Click on Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
testRunner.And("I add the equipments to the Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
testRunner.And("I click on the Adhoc Data Export", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
testRunner.And("I select the application Id from the combo box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
testRunner.And("I click on the Create Data Export button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
testRunner.When("I launch SQl Server Managment Studio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
testRunner.And("using SQL Management Studio, log on with sa accounts using SQL Server Authenticat" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
testRunner.And("I expand \'SQL Server Agent\' in Database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
testRunner.And("run the Job \"EADS | Generate Daily Execution\" manually by right clicking and sele" +
                    "cting \'Start Job at Step...\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
testRunner.Then("the zip file exists for Adhoc Data Export in \'G:\\fs_maintenance\\CDI\\CDI_Export\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 87
testRunner.And("the zip file exists for Daily Data Export in \'G:\\fs_maintenance\\CDI\\CDI_Export\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify table names obfuscated in CDI Export files")]
        [NUnit.Framework.CategoryAttribute("ApplicationServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void VerifyTableNamesObfuscatedInCDIExportFiles()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify table names obfuscated in CDI Export files", null, new string[] {
                        "ApplicationServer",
                        "SingleServer"});
#line 92
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 93
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 96
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 98
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
testRunner.And("Launched Eissa and started simulator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
testRunner.And("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 104
testRunner.When("Selected added \'NEW0001PM1\' device", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 105
testRunner.Then("I should be navigated to SEV page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 106
testRunner.When("Run CDI_Win.exe which is normally located in Local drive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
testRunner.Then("CDI config tool (CDI_Win) presents a login window requesting login entry.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "password"});
            table5.AddRow(new string[] {
                        "Administrator",
                        "toolkit"});
#line 108
testRunner.When("valid Password is provided, the user is presented with the main application windo" +
                    "w.", ((string)(null)), table5, "When ");
#line 111
testRunner.When("I click on Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
testRunner.And("I add the equipments to the Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
testRunner.When("I Click on Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
testRunner.And("I add the equipments to the Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
testRunner.And("I click on the Adhoc Data Export", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
testRunner.And("I select the application Id from the combo box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
testRunner.And("I click on the Create Data Export button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
testRunner.When("I launch SQl Server Managment Studio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 119
testRunner.And("using SQL Management Studio, log on with sa accounts using SQL Server Authenticat" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
testRunner.And("I expand \'SQL Server Agent\' in Database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
testRunner.And("run the Job \"EADS | Generate Daily Execution\" manually by right clicking and sele" +
                    "cting \'Start Job at Step...\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
testRunner.Then("the zip file exists for Adhoc Data Export in \'G:\\fs_maintenance\\CDI\\CDI_Export\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 123
testRunner.When("I Unzip the Adhoc Data Export file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
testRunner.Then("the table names in the Adhoc Export files are obfuscated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Adding the option to change daily exports to weekly.")]
        public virtual void AddingTheOptionToChangeDailyExportsToWeekly_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Adding the option to change daily exports to weekly.", null, ((string[])(null)));
#line 126
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 127
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 128
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 130
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 132
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
testRunner.And("Launched Eissa and started simulator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
testRunner.And("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 138
testRunner.When("Selected added \'NEW0001PM1\' device", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 139
testRunner.Then("I should be navigated to SEV page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 140
testRunner.When("Run CDI_Win.exe which is normally located in Local drive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 141
testRunner.Then("CDI config tool (CDI_Win) presents a login window requesting login entry.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "password"});
            table6.AddRow(new string[] {
                        "Administrator",
                        "toolkit"});
#line 142
testRunner.When("valid Password is provided, the user is presented with the main application windo" +
                    "w.", ((string)(null)), table6, "When ");
#line 145
testRunner.When("I click on Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
testRunner.And("I add the equipments to the Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
testRunner.When("I launch SQl Server Managment Studio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 148
testRunner.And("using SQL Management Studio, log on with sa accounts using SQL Server Authenticat" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
testRunner.And("I expand \'SQL Server Agent\' in Database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
testRunner.And("run the Job \"EADS | Generate Daily Execution\" manually by right click and selecti" +
                    "ng \'Start Job at Step...\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
testRunner.Then("the zip file exists for Daily Data Export in \'G:\\fs_maintenance\\CDI\\CDI_Export\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 152
testRunner.When("Select Job Schedule from the config menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 153
testRunner.Then("SQL job Scheduler GUI dialog is opened.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 154
testRunner.When("Select Job \'EADS | Generate Daily Execution\' then Schedules \'TestingSchedule\' and" +
                    " Click Edit button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 155
testRunner.Then("The Edit Schedule \'Edit Schedule\' dialog box is opened for the selected schedule." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 156
testRunner.Then("The Edit Schedule \'CDI_Export_Dynamic\' dialog box is opened for the selected sche" +
                    "dule.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 157
testRunner.When("configure the schedule \'CDI_Export_Dynamic\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify column names obfuscated in CDI Export files")]
        [NUnit.Framework.CategoryAttribute("ApplicationServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void VerifyColumnNamesObfuscatedInCDIExportFiles()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify column names obfuscated in CDI Export files", null, new string[] {
                        "ApplicationServer",
                        "SingleServer"});
#line 161
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 162
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 163
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 165
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 166
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 167
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 168
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
testRunner.And("Launched Eissa and started simulator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
testRunner.And("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 173
testRunner.When("Selected added \'NEW0001PM1\' device", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 174
testRunner.Then("I should be navigated to SEV page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 175
testRunner.When("Run CDI_Win.exe which is normally located in Local drive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 176
testRunner.Then("CDI config tool (CDI_Win) presents a login window requesting login entry.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "password"});
            table7.AddRow(new string[] {
                        "Administrator",
                        "toolkit"});
#line 177
testRunner.When("valid Password is provided, the user is presented with the main application windo" +
                    "w.", ((string)(null)), table7, "When ");
#line 180
testRunner.When("I click on Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 181
testRunner.And("I add the equipments to the Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
testRunner.When("I Click on Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 183
testRunner.And("I add the equipments to the Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
testRunner.And("I click on the Adhoc Data Export", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
testRunner.And("I select the application Id from the combo box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 186
testRunner.And("I click on the Create Data Export button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
testRunner.When("I launch SQl Server Managment Studio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 188
testRunner.And("using SQL Management Studio, log on with sa accounts using SQL Server Authenticat" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
testRunner.And("I expand \'SQL Server Agent\' in Database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
testRunner.And("run the Job \"EADS | Generate Daily Execution\" manually by right clicking and sele" +
                    "cting \'Start Job at Step...\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
testRunner.Then("the zip file exists for Adhoc Data Export in \'G:\\fs_maintenance\\CDI\\CDI_Export\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 192
testRunner.And("the zip file exists for Daily Data Export in \'G:\\fs_maintenance\\CDI\\CDI_Export\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
testRunner.When("I Unzip the Adhoc Data Export file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 194
testRunner.Then("the table names in the Adhoc Export files are obfuscated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 195
testRunner.And("the column names in the Adhoc Export file are obfuscated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
testRunner.When("I Unzip the Daily Data Export file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 197
testRunner.Then("the table names in the Daily Export files are obfuscated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 198
testRunner.And("the column names in the Daily Export files are obfuscated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add System Swap out Information to CDI extracts")]
        [NUnit.Framework.CategoryAttribute("ApplicationServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void AddSystemSwapOutInformationToCDIExtracts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add System Swap out Information to CDI extracts", null, new string[] {
                        "ApplicationServer",
                        "SingleServer"});
#line 203
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 204
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 205
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 206
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 207
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 208
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 209
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 210
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
testRunner.And("Launched Eissa and started simulator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
testRunner.And("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 215
testRunner.When("Selected added \'NEW0001PM1\' device", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 216
testRunner.Then("I should be navigated to SEV page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 217
testRunner.When("Run CDI_Win.exe which is normally located in Local drive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 218
testRunner.Then("CDI config tool (CDI_Win) presents a login window requesting login entry.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "password"});
            table8.AddRow(new string[] {
                        "Administrator",
                        "toolkit"});
#line 219
testRunner.When("valid Password is provided, the user is presented with the main application windo" +
                    "w.", ((string)(null)), table8, "When ");
#line 222
testRunner.When("I click on Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 223
testRunner.And("I add the equipments to the Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
testRunner.When("I Click on Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 225
testRunner.And("I add the equipments to the Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
testRunner.And("I click on the Adhoc Data Export", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
testRunner.And("I select the application Id from the combo box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
testRunner.And("I click on the Create Data Export button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
testRunner.Then("the zip file exists for Adhoc Data Export in \'G:\\fs_maintenance\\CDI\\CDI_Export\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 230
testRunner.When("I Unzip the Adhoc Data Export file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 231
testRunner.Then("the table names in the Adhoc Export files are obfuscated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 232
testRunner.And("the column names in the Adhoc Export file are obfuscated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 233
testRunner.When("Create a CDI Import folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 234
testRunner.And("I Copy CDI Exported files to CDI Import folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
testRunner.When("I extract file in CDI Import folder using command", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 236
testRunner.Then("the file \"fst_GEN_SystemSerialNumber_cache.csv\" should exist in CDI Adhoc import " +
                    "files", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Model XML information needs to be omitted in CDI export files")]
        public virtual void ModelXMLInformationNeedsToBeOmittedInCDIExportFiles()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Model XML information needs to be omitted in CDI export files", null, ((string[])(null)));
#line 238
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 239
testRunner.When("Clicked on PDM link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 240
testRunner.Then("I should be navigated to PDM page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 241
testRunner.And("copied site activation key available in the clipboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 242
testRunner.Given("Launched License Genrator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 243
testRunner.And("Selected latest database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 244
testRunner.When("entered general settings fields i.e. Max Assignment Count \'25\',Equipment Type \'At" +
                    "las Abatement\' & Author Name \'PdmTestUser\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 245
testRunner.And("filled algorithmName \'SingleAlgorithm\', algTypeCode \'Noz1\', Max Assignment Count " +
                    "\'25\', algorithm File \'MdxN3Compressed_VG04_Alarm.xml\' & visualization File \'Visu" +
                    "alisationXML_Algorithm.txt\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
testRunner.And("clicked Generate License button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 247
testRunner.Then("License should be generated for \'SingleAlgorithm.alf\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 248
testRunner.When("entered App Name \'SingleAlgoDemoApp\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 249
testRunner.And("clicked on Import App button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
testRunner.And("selected the algorithm license file \'SingleAlgorithm.alf\' created in previous tes" +
                    "t and upload the license file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 251
testRunner.Then("License File uploaded successfully for app \'SingleAlgoDemoApp\' with algorithm \'Si" +
                    "ngleAlgorithm :: SingleAlgoDemoApp\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 252
testRunner.When("navigated to home page and clicked device explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 253
testRunner.Then("I should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 254
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 255
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 256
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 257
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 258
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 259
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 260
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 261
testRunner.When("Launched DSPU simulator and Execute scenario \'DSPU_FvxN2VG2.xml\' \'DSPU_FVX23913Ac" +
                    "N2_UpdateTest.csv\' \'DSPU Output for FvxN2VG2.csv\' \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 262
testRunner.And("I entered Equipment name, selected equipmentType\'All\', Cliked Find Equipment butt" +
                    "on, selected one equipmentName\'FvxN2updateVG1\' and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 264
testRunner.Then("Navigate to PdM Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 265
testRunner.When("Select the uploaded App name \'SingleAlgoDemoApp\' from dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 266
testRunner.And("Clicked on the View Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
testRunner.And("Search for equipment using search box and select one by one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
testRunner.Then("List of equipments \'FvxN2updateVG2\' are shown in left side list box control.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 269
testRunner.When("Use > button for addition of equipment \'FvxN2updateVG1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 270
testRunner.Then("Selected equipment \'FvxN2updateVG1\' is added to right side list box control", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 271
testRunner.When("Press Apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 272
testRunner.Then("Changes are saved and equipment associated to app successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 273
testRunner.When("Run CDI_Win.exe which is normally located in Local drive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 274
testRunner.Then("CDI config tool (CDI_Win) presents a login window requesting login entry.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "password"});
            table9.AddRow(new string[] {
                        "Administrator",
                        "toolkit"});
#line 275
testRunner.When("valid Password is provided, the user is presented with the main application windo" +
                    "w.", ((string)(null)), table9, "When ");
#line 278
testRunner.When("I click on Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 279
testRunner.And("I add the equipments to the Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 280
testRunner.When("I Click on Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 281
testRunner.And("I add the equipments to the Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 282
testRunner.And("I click on the Adhoc Data Export", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
testRunner.And("I select the application Id from the combo box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 284
testRunner.And("I click on the Create Data Export button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
testRunner.When("I launch SQl Server Managment Studio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 286
testRunner.And("using SQL Management Studio, log on with sa accounts using SQL Server Authenticat" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 287
testRunner.And("I expand \'SQL Server Agent\' in Database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
testRunner.And("run the Job \"EADS | Generate Daily Execution\" manually by right clicking and sele" +
                    "cting \'Start Job at Step...\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 289
testRunner.Then("the zip file exists for Adhoc Data Export in \'G:\\fs_maintenance\\CDI\\CDI_Export\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 290
testRunner.When("Create a CDI Import folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 291
testRunner.And("I Copy CDI Exported files to CDI Import folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
testRunner.When("I extract file in CDI Import folder using command", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 293
testRunner.When("The folder \'pdm_probe\' have file \'tbl_Model_Configuration.csv\' should exist in CD" +
                    "I Adhoc import files", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 294
testRunner.Then("Column Encrypted_XML in tbl_Model_Configuration.csv is \'<removed>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 295
testRunner.When("The folder \'pdm_config\' have file \'eads_profile.csv\' should exist in CDI Adhoc im" +
                    "port files", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 296
testRunner.Then("Column model_xm in model_xml.csv is \'<removed>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 297
testRunner.When("The folder \'pdm_config\' have file \'eads_activity_response.csv\' should exist in CD" +
                    "I Adhoc import files", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 298
testRunner.Then("Column eads_activity_response in eads_activity_response.csv is \'<removed>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify that files are exported correctly")]
        [NUnit.Framework.CategoryAttribute("ApplicationServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void VerifyThatFilesAreExportedCorrectly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that files are exported correctly", null, new string[] {
                        "ApplicationServer",
                        "SingleServer"});
#line 302
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 303
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 304
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 305
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 306
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 307
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 308
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 309
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 310
testRunner.And("Launched Eissa and started simulator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 311
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 312
testRunner.And("I entered Equipment name, selected equipment type, Cliked Find Equipment button, " +
                    "selected one equipment and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 313
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 314
testRunner.When("Selected added \'NEW0001PM1\' device", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 315
testRunner.Then("I should be navigated to SEV page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 316
testRunner.When("Run CDI_Win.exe which is normally located in Local drive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 317
testRunner.Then("CDI config tool (CDI_Win) presents a login window requesting login entry.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "password"});
            table10.AddRow(new string[] {
                        "Administrator",
                        "toolkit"});
#line 318
testRunner.When("valid Password is provided, the user is presented with the main application windo" +
                    "w.", ((string)(null)), table10, "When ");
#line 321
testRunner.When("I click on Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 322
testRunner.And("I add the equipments to the Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 323
testRunner.When("I Click on Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 324
testRunner.And("I add the equipments to the Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 325
testRunner.And("I click on the Adhoc Data Export", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 326
testRunner.And("I select the application Id from the combo box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 327
testRunner.And("I click on the Create Data Export button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
testRunner.When("I launch SQl Server Managment Studio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 329
testRunner.And("using SQL Management Studio, log on with sa accounts using SQL Server Authenticat" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 330
testRunner.And("I expand \'SQL Server Agent\' in Database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 331
testRunner.And("run the Job \"EADS | Generate Daily Execution\" manually by right clicking and sele" +
                    "cting \'Start Job at Step...\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 332
testRunner.Then("the zip file exists for Adhoc Data Export in \'G:\\fs_maintenance\\CDI\\CDI_Export\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 333
testRunner.And("the zip file exists for Daily Data Export in \'G:\\fs_maintenance\\CDI\\CDI_Export\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 334
testRunner.When("I Unzip the Adhoc Data Export file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 335
testRunner.Then("the no.of files exported for Adhoc Export from scada production should be 43", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 336
testRunner.And("the no.of files exported for Adhoc Export from pdm config should be 21", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
testRunner.And("the no. of files exported for Adhoc Export from pdm probe should be 13", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 338
testRunner.When("I Unzip the Daily Data Export file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 339
testRunner.Then("the no.of files exported for Daily Export from scada production should be 43", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 340
testRunner.And("the no.of files exported for Daily Export from pdm config should be 21", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 341
testRunner.And("the no. of files exported for Daily Export from pdm probe should be 13", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CDI Tool Daily Extract is extracting one day extra it appears")]
        public virtual void CDIToolDailyExtractIsExtractingOneDayExtraItAppears()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CDI Tool Daily Extract is extracting one day extra it appears", null, ((string[])(null)));
#line 343
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 344
testRunner.When("Clicked on PDM link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 345
testRunner.Then("I should be navigated to PDM page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 346
testRunner.And("copied site activation key available in the clipboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 347
testRunner.Given("Launched License Genrator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 348
testRunner.And("Selected latest database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
testRunner.When("entered general settings fields i.e. Max Assignment Count \'25\',Equipment Type \'At" +
                    "las Abatement\' & Author Name \'PdmTestUser\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 350
testRunner.And("filled algorithmName \'SingleAlgorithm\', algTypeCode \'Noz1\', Max Assignment Count " +
                    "\'25\', algorithm File \'MdxN3Compressed_VG04_Alarm.xml\' & visualization File \'Visu" +
                    "alisationXML_Algorithm.txt\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
testRunner.And("clicked Generate License button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
testRunner.Then("License should be generated for \'SingleAlgorithm.alf\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 353
testRunner.When("entered App Name \'SingleAlgoDemoApp\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 354
testRunner.And("clicked on Import App button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
testRunner.And("selected the algorithm license file \'SingleAlgorithm.alf\' created in previous tes" +
                    "t and upload the license file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 356
testRunner.Then("License File uploaded successfully for app \'SingleAlgoDemoApp\' with algorithm \'Si" +
                    "ngleAlgorithm :: SingleAlgoDemoApp\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 357
testRunner.When("navigated to home page and clicked device explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 358
testRunner.Then("I should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 359
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 360
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 361
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 362
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 363
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 364
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 365
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 366
testRunner.When("Launched DSPU simulator and Execute scenario \'DSPU_FvxN2VG2.xml\' \'DSPU_FVX23913Ac" +
                    "N2_UpdateTest.csv\' \'DSPU Output for FvxN2VG2.csv\' \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 367
testRunner.And("I entered Equipment name, selected equipmentType\'All\', Cliked Find Equipment butt" +
                    "on, selected one equipmentName\'FvxN2updateVG1\' and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 368
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 369
testRunner.Then("Navigate to PdM Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 370
testRunner.When("Select the uploaded App name \'SingleAlgoDemoApp\' from dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 371
testRunner.And("Clicked on the View Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 372
testRunner.And("Search for equipment using search box and select one by one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 373
testRunner.Then("List of equipments \'FvxN2updateVG2\' are shown in left side list box control.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 374
testRunner.When("Use > button for addition of equipment \'FvxN2updateVG1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 375
testRunner.Then("Selected equipment \'FvxN2updateVG1\' is added to right side list box control", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 376
testRunner.When("Press Apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 377
testRunner.Then("Changes are saved and equipment associated to app successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 378
testRunner.When("Run CDI_Win.exe which is normally located in Local drive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 379
testRunner.Then("CDI config tool (CDI_Win) presents a login window requesting login entry.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "userName",
                        "password"});
            table11.AddRow(new string[] {
                        "Administrator",
                        "toolkit"});
#line 380
testRunner.When("valid Password is provided, the user is presented with the main application windo" +
                    "w.", ((string)(null)), table11, "When ");
#line 383
testRunner.When("I click on Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 384
testRunner.And("I add the equipments to the Daily Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 385
testRunner.When("I Click on Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 386
testRunner.And("I add the equipments to the Adhoc Equipment Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 387
testRunner.And("I click on the Adhoc Data Export", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 388
testRunner.And("I select the application Id from the combo box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 389
testRunner.And("I click on the Create Data Export button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
testRunner.When("I launch SQl Server Managment Studio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 391
testRunner.And("using SQL Management Studio, log on with sa accounts using SQL Server Authenticat" +
                    "ion", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
testRunner.And("I expand \'SQL Server Agent\' in Database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 393
testRunner.And("run the Job \"EADS | Generate Daily Execution\" manually by right clicking and sele" +
                    "cting \'Start Job at Step...\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 394
testRunner.Then("the zip file exists for Adhoc Data Export in \'G:\\fs_maintenance\\CDI\\CDI_Export\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 395
testRunner.When("Create a CDI Import folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 396
testRunner.And("I Copy CDI Exported files to CDI Import folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 397
testRunner.When("I extract file in CDI Import folder using command", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 398
testRunner.When("The folder \'scada_Production\' have file \'fst_REP_SystemRunningTimeSummaryByDate.c" +
                    "sv\' should exist in CDI Adhoc import files", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 399
testRunner.Then("Each day\'s extraction contains data for that day for values, statuses, alerts for" +
                    " scada_Production export", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

