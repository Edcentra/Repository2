// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Edwards.Scada.Test.Framework.TestCases.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PdmTests")]
    public partial class PdmTestsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PdmTests.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PdmTests", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
testRunner.Given("Opened the EDCENTRA application url in browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
testRunner.When("I Enter the username as \'administrator\' and password a*******kit\' and Clicked log" +
                    "in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 6
testRunner.Then("I Should be Navigated to the home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 7
testRunner.When("Clicked on PDM link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
testRunner.Then("I should be navigated to PDM page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 9
testRunner.And("copied site activation key available in the clipboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Licensing - Generate a license from single algorithm")]
        [NUnit.Framework.CategoryAttribute("Pdm")]
        public virtual void Licensing_GenerateALicenseFromSingleAlgorithm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Licensing - Generate a license from single algorithm", null, new string[] {
                        "Pdm"});
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 13
testRunner.Given("Launched License Genrator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
testRunner.And("Selected latest database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
testRunner.When("entered general settings fields i.e. Max Assignment Count \'25\',Equipment Type \'At" +
                    "las Abatement\' & Author Name \'PdmTestUser\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
testRunner.And("filled algorithmName \'SingleAlgorithm\', algTypeCode \'Noz1\', Max Assignment Count " +
                    "\'25\', algorithm File \'MdxN3Compressed_VG04_Alarm.xml\' & visualization File \'Visu" +
                    "alisationXML_Algorithm.txt\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
testRunner.And("clicked Generate License button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
testRunner.Then("License should be generated for \'SingleAlgorithm.alf\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Licensing- Generate a license from Web UI for multi algorithm")]
        [NUnit.Framework.CategoryAttribute("Pdm")]
        public virtual void Licensing_GenerateALicenseFromWebUIForMultiAlgorithm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Licensing- Generate a license from Web UI for multi algorithm", null, new string[] {
                        "Pdm"});
#line 21
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 22
testRunner.Given("Launched License Genrator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 23
testRunner.And("Selected latest database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
testRunner.When("entered general settings fields i.e. Max Assignment Count \'25\',Equipment Type \'At" +
                    "las Abatement\' & Author Name \'PdmTestUser\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
testRunner.And("filled algorithmName \'MultiAlgo1\', algTypeCode \'Noz1\', Max Assignment Count \'25\'," +
                    " algorithm File \'MdxN3Compressed_VG04_Alarm.xml\' & visualization File \'Visualisa" +
                    "tionXML_Algorithm.txt\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
testRunner.And("filled algorithmName \'MultiAlgo2\', algTypeCode \'Noz2\', Max Assignment Count \'25\'," +
                    " algorithm File \'MdxN3Compressed_VG04_Warning.xml\' & visualization File \'Visuali" +
                    "sationXML_Algorithm.txt\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
testRunner.And("clicked Generate License button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
testRunner.Then("License should be generated for \'MultipleAlgorithm.alf\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Licensing-Upload a license from Web UI for multi algorithm")]
        [NUnit.Framework.CategoryAttribute("Pdm")]
        public virtual void Licensing_UploadALicenseFromWebUIForMultiAlgorithm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Licensing-Upload a license from Web UI for multi algorithm", null, new string[] {
                        "Pdm"});
#line 31
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 32
testRunner.When("entered App Name \'MultiAlgoDemoAPP\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
testRunner.And("clicked on Import App button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
testRunner.And("selected the algorithm license file \'MultipleAlgorithm.alf\' created in previous t" +
                    "est and upload the license file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
testRunner.Then("License File uploaded successfully for app \'MultiAlgoDemoAPP\' with algorithms \'Mu" +
                    "ltiAlgo1 :: MultiAlgoDemoAPP\' and \'MultiAlgo2 :: MultiAlgoDemoAPP\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Licensing-Upload a license from Web UI for single algorithm")]
        [NUnit.Framework.CategoryAttribute("Pdm")]
        public virtual void Licensing_UploadALicenseFromWebUIForSingleAlgorithm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Licensing-Upload a license from Web UI for single algorithm", null, new string[] {
                        "Pdm"});
#line 38
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 39
testRunner.When("entered App Name \'SingleAlgoDemoAPP\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
testRunner.And("clicked on Import App button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
testRunner.And("selected the algorithm license file \'SingleAlgorithm.alf\' created in previous tes" +
                    "t and upload the license file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
testRunner.Then("License File uploaded successfully for app \'SingleAlgoDemoAPP\' with algorithm \'Si" +
                    "ngleAlgorithm :: SingleAlgoDemoAPP\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Algmanagement-Associate equipment to Algorithm")]
        [NUnit.Framework.CategoryAttribute("Pdm")]
        public virtual void Algmanagement_AssociateEquipmentToAlgorithm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Algmanagement-Associate equipment to Algorithm", null, new string[] {
                        "Pdm"});
#line 45
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 46
testRunner.When("entered App Name \'SingleAlgoDemoApp\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
testRunner.And("clicked on Import App button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
testRunner.And("selected the algorithm license file \'SingleAlgorithm.alf\' created in previous tes" +
                    "t and upload the license file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
testRunner.And("navigated to Import page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.And("entered App Name \'MultiAlgoDemoAPP\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
testRunner.And("clicked on Import App button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.And("selected the algorithm license file \'MultipleAlgorithm.alf\' created in previous t" +
                    "est and upload the license file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
testRunner.And("Launched DSPU simulator and Executed scenario \'MdxN3N4N5Scenario.xml\' \'DSPU_MdxN3" +
                    "N4N5Compressed.csv\' \'Dspu Output for MdxN3N4N5.csv\' \'25\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
testRunner.And("Select the uploaded App name \'SingleAlgoDemoApp\' from dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
testRunner.And("Clicked on the View Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
testRunner.Then("App name \'SingleAlgoDemoApp\' selected successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
testRunner.When("Select algorithm \'SingleAlgorithm :: SingleAlgoDemoApp\' associated to that App", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
testRunner.Then("Algorithm \'SingleAlgorithm :: SingleAlgoDemoApp\'selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 59
testRunner.When("Search for equipment using search box and select one by one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
testRunner.Then("List of equipments \'MdxN3N4N5VG2002\' are shown in left side list box control.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 61
testRunner.When("Use > button for addition of equipment \'MdxN3N4N5VG2001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
testRunner.Then("Selected equipment \'MdxN3N4N5VG2001\' is added to right side list box control", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
testRunner.When("Press Apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
testRunner.Then("Changes are saved and equipment associated to app successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 65
testRunner.When("Select the uploaded App name \'MultiAlgoDemoAPP\' from dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
testRunner.And("Clicked on the View Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
testRunner.Then("App name \'MultiAlgoDemoAPP\' selected successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 68
testRunner.When("Select algorithm \'MultiAlgo1 :: MultiAlgoDemoAPP\' associated to that App", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
testRunner.Then("Algorithm \'MultiAlgo1 :: MultiAlgoDemoAPP\'selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 70
testRunner.When("Search for equipment using search box and select one by one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
testRunner.Then("List of equipments \'MdxN3N4N5VG2002\' are shown in left side list box control.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 72
testRunner.When("Use > button for addition of equipments \'MdxN3N4N5VG2002\' \'MdxN3N4N5VG2003\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
testRunner.Then("Selected equipment \'MdxN3N4N5VG2003\' is added to right side list box control", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 74
testRunner.When("Press Apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
testRunner.Then("Changes are saved and equipment associated to app successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Algmanagement-Associate equipment to App")]
        [NUnit.Framework.CategoryAttribute("Pdm")]
        public virtual void Algmanagement_AssociateEquipmentToApp()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Algmanagement-Associate equipment to App", null, new string[] {
                        "Pdm"});
#line 78
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 79
testRunner.When("entered App Name \'MultiAlgoDemoAPP\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
testRunner.And("clicked on Import App button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
testRunner.And("selected the algorithm license file \'MultipleAlgorithm.alf\' created in previous t" +
                    "est and upload the license file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
testRunner.Then("License File uploaded successfully for app \'MultiAlgoDemoAPP\' with algorithms \'Mu" +
                    "ltiAlgo1 :: MultiAlgoDemoAPP\' and \'MultiAlgo2 :: MultiAlgoDemoAPP\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 83
testRunner.When("Launched DSPU simulator and Executed scenario \'MdxN3N4N5Scenario.xml\' \'DSPU_MdxN3" +
                    "N4N5Compressed.csv\' \'Dspu Output for MdxN3N4N5.csv\' \'25\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
testRunner.And("Select the uploaded App name \'MultiAlgoDemoAPP\' from dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
testRunner.And("Clicked on the View Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
testRunner.And("Search for equipment using search box and select one by one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
testRunner.Then("List of equipments \'MdxN3N4N5VG2002\' are shown in left side list box control.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 88
testRunner.When("Use > button for addition of equipment \'MdxN3N4N5VG2001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
testRunner.Then("Selected equipment \'MdxN3N4N5VG2001\' is added to right side list box control", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 90
testRunner.When("Press Apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
testRunner.Then("Changes are saved and equipment associated to app successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 92
testRunner.And("All the algorithms \'MultiAlgo1 :: MultiAlgoDemoAPP\' & \'MultiAlgo2 :: MultiAlgoDem" +
                    "oAPP\' associated with the App have the same equipments \'MdxN3N4N5VG2001\'.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Licensing-Delete App License File using single/multiple algorithm")]
        [NUnit.Framework.CategoryAttribute("Pdm")]
        public virtual void Licensing_DeleteAppLicenseFileUsingSingleMultipleAlgorithm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Licensing-Delete App License File using single/multiple algorithm", null, new string[] {
                        "Pdm"});
#line 95
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 96
testRunner.When("entered App Name \'SingleAlgoDemoAPP\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
testRunner.And("clicked on Import App button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
testRunner.When("selected the algorithm license file \'SingleAlgorithm.alf\' created in previous tes" +
                    "t and upload the license file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
testRunner.Then("License File uploaded successfully for app \'SingleAlgoDemoAPP\' with algorithm \'Si" +
                    "ngleAlgorithm :: SingleAlgoDemoAPP\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 100
testRunner.When("Launched DSPU simulator and Executed scenario \'MdxN3N4N5Scenario.xml\' \'DSPU_MdxN3" +
                    "N4N5Compressed.csv\' \'Dspu Output for MdxN3N4N5.csv\' \'25\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 101
testRunner.And("Select the uploaded App name \'SingleAlgoDemoApp\' from dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
testRunner.And("Clicked on the View Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
testRunner.And("Search for equipment using search box and select one by one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
testRunner.Then("List of equipments \'MdxN3N4N5VG2002\' are shown in left side list box control.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 105
testRunner.When("Use > button for addition of equipment \'MdxN3N4N5VG2001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 106
testRunner.Then("Selected equipment \'MdxN3N4N5VG2001\' is added to right side list box control", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 107
testRunner.When("Press Apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 108
testRunner.Then("Changes are saved and equipment associated to app successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 109
testRunner.When("Dissociate all the equipments assigned to App \'SingleAlgoDemoApp\' algorithm if an" +
                    "y", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 110
testRunner.Then("Equipments\'MdxN3N4N5VG2001\' are Dissociated successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 111
testRunner.When("Press Delete button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
testRunner.Then("Alert shown with message \"This app and its algorithms will be permanently deleted" +
                    ". Are you sure?\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 113
testRunner.When("Press Cancel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
testRunner.Then("Returns to same page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 115
testRunner.When("Press app \'SingleAlgoDemoApp\' Delete button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 116
testRunner.Then("Delete this app shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 117
testRunner.When("Press Delete item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 118
testRunner.Then("Delete the app with algorithms \'SingleAlgorithm :: SingleAlgoDemoApp\' successfull" +
                    "y", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 119
testRunner.And("App name \'SingleAlgoDemoApp\' should disappear from the list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Licensing-Update App License File using single algorithm")]
        [NUnit.Framework.CategoryAttribute("Pdm")]
        public virtual void Licensing_UpdateAppLicenseFileUsingSingleAlgorithm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Licensing-Update App License File using single algorithm", null, new string[] {
                        "Pdm"});
#line 122
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 123
testRunner.When("entered App Name \'SingleAlgoDemoApp\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
testRunner.And("clicked on Import App button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
testRunner.And("selected the algorithm license file \'AlarmAlgorithm.alf\' created in previous test" +
                    " and upload the license file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
testRunner.Then("License File uploaded successfully for app \'SingleAlgoDemoApp\' with algorithm \'Al" +
                    "armAlgorithm :: SingleAlgoDemoApp\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 127
testRunner.When("navigated to home page and clicked device explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 128
testRunner.Then("Should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 129
testRunner.When("Clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
testRunner.And("entered folder name and clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
testRunner.Then("should be able to see folder added successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 132
testRunner.When("clicked Ok button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
testRunner.Then("should be able to see newly added Folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 134
testRunner.When("clicked find equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 135
testRunner.And("deleted all Equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
testRunner.When("Launched DSPU simulator and Execute scenario \'DSPU_FvxN2VG2.xml\' \'DSPU_FVX23913Ac" +
                    "N2_UpdateTest.csv\' \'DSPU Output for FvxN2VG2.csv\' \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 137
testRunner.And("I entered Equipment name, selected equipmentType \'All\', Cliked Find Equipment but" +
                    "ton, selected equipment \'FvxN2updateVG1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
testRunner.Then("Navigate to PdM Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 139
testRunner.When("Select the uploaded App name \'SingleAlgoDemoApp\' from dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 140
testRunner.And("Clicked on the View Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
testRunner.And("Search for equipment using search box and select one by one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
testRunner.Then("List of equipments \'FvxN2updateVG2\' are shown in left side list box control.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 143
testRunner.When("Use > button for addition of equipment \'FvxN2updateVG1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
testRunner.Then("Selected equipment \'FvxN2updateVG1\' is added to right side list box control", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 145
testRunner.When("Press Apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
testRunner.Then("Changes are saved and equipment associated to app successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 147
testRunner.When("Start DSPU Scenario \'DSPU_FvxN2VG2.xml\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 148
testRunner.And("Check for alerts on Web UI.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
testRunner.Then("Alarm alerts are displayed on the Web UI", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 150
testRunner.When("Restore scada \'DSPU_FvxN2VG2.xml\' and stop scenario once execution got closed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 151
testRunner.And("Open the App license \'AlarmAlgorithm.alf\' in license generator tool.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
testRunner.And("Update the xml use warning alert model \'FVX23913AcN2_UpdateTestV1.xml\' and expiry" +
                    " date and generate the new \'WarningAlgorithm.alf\' App license.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
testRunner.Then("New app license \'WarningAlgorithm.alf\' with updated details is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 155
testRunner.When("Refresh page and switch to PdM license page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 156
testRunner.And("entered App Name \'WarningAlgoDemoAPP\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
testRunner.And("clicked on Import App button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
testRunner.And("selected the algorithm license file \'WarningAlgorithm.alf\' created in previous te" +
                    "st and upload the license file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
testRunner.Then("Ensure it prompts for Update, Create New and Cancel.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 160
testRunner.When("Click on Update button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 161
testRunner.Then("License is updated successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 162
testRunner.When("Check the expiry date on Web UI.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 163
testRunner.Then("Ensure that the expiry date is updated successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 164
testRunner.When("Run DSPU scenario \'DSPU_FvxN2VG2.xml\' and check the alerts.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 165
testRunner.Then("warning alerts are observed then model xml is updated successfully otherwise fail" +
                    " the test.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 166
testRunner.And("Ensure that on perfroming license \'AlarmAlgoDemoAPP\' update, the associated equip" +
                    "ments\'FvxN2updateVG1\' will not change.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Algmanagement- Manual reset App with Multi algorithm")]
        [NUnit.Framework.CategoryAttribute("Pdm")]
        public virtual void Algmanagement_ManualResetAppWithMultiAlgorithm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Algmanagement- Manual reset App with Multi algorithm", null, new string[] {
                        "Pdm"});
#line 169
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 170
testRunner.When("entered App Name \'MultiAlgoDemoAPP\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 171
testRunner.And("clicked on Import App button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
testRunner.And("selected the algorithm license file \'MultipleAlgorithm.alf\' created in previous t" +
                    "est and upload the license file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
testRunner.And("navigated to home page and clicked device explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
testRunner.Then("Should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 175
testRunner.When("Clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 176
testRunner.And("entered folder name and clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
testRunner.Then("should be able to see folder added successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 178
testRunner.When("clicked Ok button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 179
testRunner.Then("should be able to see newly added Folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 180
testRunner.When("clicked find equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 181
testRunner.And("deleted all Equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
testRunner.And("Launched DSPU simulator and Executed scenario \'MdxN3N4N5Scenario.xml\' \'DSPU_MdxN3" +
                    "N4N5Compressed.csv\' \'Dspu Output for MdxN3N4N5.csv\' \'25\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
testRunner.And("I entered Equipment name, selected equipmentType \'All\', Cliked Find Equipment but" +
                    "ton, selected equipment \'MdxN3N4N5VG2001\' \'MdxN3N4N5VG2002\' \'MdxN3N4N5VG2003\' an" +
                    "d clicked Add button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
testRunner.And("navigated to PDM page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
testRunner.And("Select the uploaded App name \'MultiAlgoDemoAPP\' from dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 186
testRunner.And("Clicked on the View Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
testRunner.When("Search for equipment using search box and select one by one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 188
testRunner.Then("List of equipments \'MdxN3N4N5VG2002\' are shown in left side list box control.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 189
testRunner.When("Use > button for addition of equipment \'MdxN3N4N5VG2001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 190
testRunner.Then("Selected equipment \'MdxN3N4N5VG2001\' is added to right side list box control", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 191
testRunner.When("Press Apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 192
testRunner.Then("Changes are saved and equipment associated to app successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 193
testRunner.When("Search for equipment using search box and select one by one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 194
testRunner.Then("List of equipments \'MdxN3N4N5VG2002\' are shown in left side list box control.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 195
testRunner.When("Use > button for addition of equipment \'MdxN3N4N5VG2001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 196
testRunner.Then("Selected equipment \'MdxN3N4N5VG2001\' is added to right side list box control", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 197
testRunner.When("Press Apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 198
testRunner.Then("Changes are saved and equipment associated to app successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 199
testRunner.And("Alerts to be shown on screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
testRunner.When("Select the uploaded App name \'MultiAlgoDemoAPP\' from dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 201
testRunner.And("Clicked on the View Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
testRunner.And("Selected previously added \'MdxN3N4N5VG2001\' equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
testRunner.And("clicked Reset button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
testRunner.Then("Dialog box appear with message \'Reset app for the above systems?\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 205
testRunner.When("Pressed Reset button on the dialog box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 206
testRunner.Then("\'1 of 1 systems reset.\' message appeared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 207
testRunner.When("Closed pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 208
testRunner.Then("All active alerts associated with selected equipments should disapper", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Algmanagement- Manual reset App with Single algorithm")]
        [NUnit.Framework.CategoryAttribute("Pdm")]
        public virtual void Algmanagement_ManualResetAppWithSingleAlgorithm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Algmanagement- Manual reset App with Single algorithm", null, new string[] {
                        "Pdm"});
#line 211
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 212
testRunner.When("entered App Name \'SingleAlgoDemoApp\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 213
testRunner.And("clicked on Import App button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
testRunner.And("selected the algorithm license file \'SingleAlgorithm.alf\' created in previous tes" +
                    "t and upload the license file", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
testRunner.And("navigated to home page and clicked device explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
testRunner.Then("Should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 217
testRunner.When("Clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 218
testRunner.And("entered folder name and clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
testRunner.Then("should be able to see folder added successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 220
testRunner.When("clicked Ok button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 221
testRunner.Then("should be able to see newly added Folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 222
testRunner.When("clicked find equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 223
testRunner.And("deleted all Equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
testRunner.When("Launched DSPU simulator and Executed scenario \'MdxN3N4N5Scenario.xml\' \'DSPU_MdxN3" +
                    "N4N5Compressed.csv\' \'Dspu Output for MdxN3N4N5.csv\' \'25\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 225
testRunner.And("added \'MdxN3N4N5VG2001\' device.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
testRunner.And("navigated to PDM page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
testRunner.And("Select the uploaded App name \'SingleAlgoDemoApp\' from dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
testRunner.And("Clicked on the View Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
testRunner.And("Search for equipment using search box and select one by one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
testRunner.Then("List of equipments \'MdxN3N4N5VG2002\' are shown in left side list box control.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 231
testRunner.When("Use > button for addition of equipment \'MdxN3N4N5VG2001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 232
testRunner.Then("Selected equipment \'MdxN3N4N5VG2001\' is added to right side list box control", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 233
testRunner.When("Press Apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 234
testRunner.Then("Changes are saved and equipment associated to app successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 235
testRunner.When("Search for equipment using search box and select one by one", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 236
testRunner.Then("List of equipments \'MdxN3N4N5VG2002\' are shown in left side list box control.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 237
testRunner.When("Use > button for addition of equipment \'MdxN3N4N5VG2001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 238
testRunner.Then("Selected equipment \'MdxN3N4N5VG2001\' is added to right side list box control", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 239
testRunner.When("Press Apply button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 240
testRunner.Then("Changes are saved and equipment associated to app successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 241
testRunner.Then("Alerts to be shown on screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 242
testRunner.When("Select the uploaded App name \'SingleAlgoDemoApp\' from dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 243
testRunner.And("Clicked on the View Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 244
testRunner.And("Selected previously added \'MdxN3N4N5VG2001\' equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 245
testRunner.And("clicked Reset button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
testRunner.Then("Dialog box appear with message \'Reset app for the above systems?\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 247
testRunner.When("Pressed Reset button on the dialog box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 248
testRunner.Then("\'1 of 1 systems reset.\' message appeared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 249
testRunner.When("Closed pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 250
testRunner.Then("All active alerts associated with selected equipments should disapper", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

