// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Edwards.Scada.Test.Framework.TestCases.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("LiveAlertsList")]
    public partial class LiveAlertsListFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "LiveAlertsList.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "LiveAlertsList", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
testRunner.Given("I opened EDCENTRA app url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
testRunner.When("I entered \'administrator\' and \'toolkit\' and clicked login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 6
testRunner.Then("I should be navigated to Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 7
testRunner.When("I clicked Device Explorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
testRunner.Then("I should be navigated to Device Explorer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 9
testRunner.When("I clicked on add folder/ system icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
testRunner.And("I Entered folder name and Clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
testRunner.Then("I should be able to see Folder Added Successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
testRunner.When("I clicked OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
testRunner.Then("I should be able to see newly added folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
testRunner.When("I clicked Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
testRunner.And("deleted all equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts List - Live Alerts Count")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsList_LiveAlertsCount()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts List - Live Alerts Count", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 20
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 21
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
testRunner.When("Launched Eissa and started Simulator and selected device type \'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
testRunner.Given("Raised alert High Alarm on Booster Power, Low alarm on MB Motor Temperature, High" +
                    " Warning on Dry Pump Control,low warning on  Booster Control, Advisory on Seals " +
                    "Purge", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
testRunner.When("Navigated to Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
testRunner.And("Selected Live Alerts List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
testRunner.And("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
testRunner.And("In the System Name text box, type part or the entire name of a device \'NEW0001PM1" +
                    "\' that is visible in the list of alerts in the main window.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
testRunner.And("Clicked Apply Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
testRunner.Then("current live alerts should be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
testRunner.When("count displayed is greater than \'0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
testRunner.Then("Symbols should be enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 34
testRunner.When("clicked on the Alarm Symbol in top right corner.(Assuming there are alerts of typ" +
                    "e Alarm present and Sysmbol is enabled)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
testRunner.Then("Live Alerts list screen should appear with all Major and Minor Alarm ie \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 36
testRunner.And("Alerts Level filter set to Major Alarm and Minor Alarm.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
testRunner.When("Clicked on the Warning Symbol in top right corner.(Assuming there are alerts of t" +
                    "ype Warning present and Sysmbol is enabled)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
testRunner.Then("Live Alerts list screen should appear with total count i.e. \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
testRunner.And("Alert Level filter set to Major Warning and Minor Warning.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
testRunner.When("Clicked on the Advisory Symbol in top right corner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
testRunner.Then("The Live Alerts list should display the Advisory ie.\'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 42
testRunner.And("Alert Level filter set to Advisory", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts List - Filtering (Actual Status)")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsList_FilteringActualStatus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts List - Filtering (Actual Status)", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 47
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 48
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
testRunner.When("Launched Eissa and started Simulator and selected device type \'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.And("Raised Alert on parameters \'8          (Booster Power)\', \'11          (Dry Pump C" +
                    "ontrol)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
testRunner.Given("I entered Equipment name, selected equipmentType\'All\', Cliked Find Equipment butt" +
                    "on, selected one equipmentName\'NEW0001PM1\' and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
testRunner.When("Navigated to Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
testRunner.And("Selected Live Alerts List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
testRunner.And("clicked the Active Alert tab on Live Alert screen.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
testRunner.Then("The list alerts should only show alerts that are active – i.e. alerts that have b" +
                    "een raised by the device but not yet ended by the device.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 58
testRunner.When("Cleared Alert from simulator  \'8          (Booster Power)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
testRunner.And("clicked the All Alerts tab on Live Alert screen.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
testRunner.Then("the list of alerts should show alerts inactive – i.e. alerts that have been raise" +
                    "d by the device and then ended by the device.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts List - Filtering (Alert Level)")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsList_FilteringAlertLevel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts List - Filtering (Alert Level)", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 65
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 66
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
testRunner.And("Commissioned device with following details  \'Turbo Pump\', \'4003\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
testRunner.And("Commissioned device with details  \'Turbo Pump\', \'4002\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
testRunner.And("Raised alert on turbo equipment with alert codes \'18\' & \'19\' on port \'4003\' & \'40" +
                    "02\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
testRunner.When("Navigated to Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
testRunner.And("Selected Live Alerts List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
testRunner.Then("The Created Alert should appear in Live Alerts List.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 74
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
testRunner.Then("Filter pane displayed at top of View Alerts screen.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 76
testRunner.When("Marked CheckBox Minor Alarm and Un-Mark all other Alert Level CheckBox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
testRunner.And("Clicked Apply Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
testRunner.Then("Only Alert with code \'18\' creataed in previous step should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 79
testRunner.When("Repeated the previous steps with severity levels ‘Major Warning’", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
testRunner.And("Clicked Apply Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
testRunner.Then("Only Alert with code \'19\' creataed in previous step should display", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts List - Filtering (Alert Source)")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsList_FilteringAlertSource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts List - Filtering (Alert Source)", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 88
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 89
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 90
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
testRunner.When("Launched Eissa and started Simulator and selected device type \'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
testRunner.And("Navigated to Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
testRunner.And("Raised Alert on parameters \'8          (Booster Power)\', \'11          (Dry Pump C" +
                    "ontrol)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
testRunner.Given("Selected Live Alerts List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 96
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
testRunner.Then("The filter section should pop-up showing several fields that can be used to searc" +
                    "h for a particular alert.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 98
testRunner.When("Deselected all the Alert Source checkboxes.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
testRunner.Then("All checkboxes cleared.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 100
testRunner.When("Selected Equipment checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 101
testRunner.And("Clicked Apply Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
testRunner.Then("Only Alerts with the selected source should be displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts List - Filtering (Assigned user)")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsList_FilteringAssignedUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts List - Filtering (Assigned user)", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 111
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 112
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 113
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
testRunner.And("Clicked the Create Alert button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
testRunner.Then("A \'Create Alert\' popup window should be displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 116
testRunner.When("Changed the Assigned User box to a user in the system.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
testRunner.Then("The entry changes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 118
testRunner.When("Entered \'Test Message\' in the Default Alert Message textbox.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 119
testRunner.And("Clicked Create Alert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
testRunner.Then("The alert should be created \'The alert has been created\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 121
testRunner.And("displayed in the View Alerts screen with message\'Test Message\' and Severity \'Advi" +
                    "sory\'.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 123
testRunner.Then("The filter section should pop-up.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 124
testRunner.When("Selected the Assigned user drop down as the user \'administrator\' you selected whe" +
                    "n created the test alert above.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
testRunner.And("Clicked Apply Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
testRunner.Then("The current Alerts screen should only show alerts for the user \'administrator\' sp" +
                    "ecified in the filter.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts List - Filtering (Dates)")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsList_FilteringDates()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts List - Filtering (Dates)", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 131
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 132
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 133
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 134
testRunner.And("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
testRunner.And("Clicked the Create Alert button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
testRunner.Then("A \'Create Alert\' popup window should be displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 137
testRunner.When("Changed the Assigned User box to a user in the system.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
testRunner.Then("The entry changes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 139
testRunner.When("Entered \'Test Message\' in the Default Alert Message textbox.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 140
testRunner.And("Clicked Create Alert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
testRunner.Then("The alert should be created \'The alert has been created\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 142
testRunner.And("The filter section should pop-up showing several fields that can be used to searc" +
                    "h for a particular alert.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
testRunner.When("Clicked the checkbox besides From and To Date.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
testRunner.Then("Two date entry boxes will be enabled.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 145
testRunner.When("The dates can be entered by text input (in the format yyyy-mm-dd) or by using the" +
                    " date selection boxes next to the date text boxes.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
testRunner.And("Clicked the calender button besides From date.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
testRunner.Then("A datepicker calendar control will be displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 148
testRunner.When("Selected a date from the popup calendar window by clicking on a day number.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 149
testRunner.Then("The Start Date textbox is populated with the selected date from the calendar.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 150
testRunner.When("Clicked the calender button besides To date.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 151
testRunner.Then("A datepicker calendar control will be displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 152
testRunner.When("Selected End date from the popup calendar window by clicking on a day number.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 153
testRunner.Then("The End Date textbox will be populated with selected end date.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 154
testRunner.And("Clicked Apply Filter Only events between the selected dates are shown in the Aler" +
                    "ts screen.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts List - Filtering (Description)")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsList_FilteringDescription()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts List - Filtering (Description)", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 160
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 161
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 163
testRunner.And("Clicked the Create Alert button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
testRunner.Then("A \'Create Alert\' popup window should be displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 165
testRunner.When("Changed the Assigned User box to a user in the system.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 166
testRunner.Then("The entry changes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 167
testRunner.When("Entered \'Test Message\' in the Default Alert Message textbox.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 168
testRunner.And("Clicked Create Alert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
testRunner.Then("The alert should be created \'The alert has been created\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 170
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 171
testRunner.Then("Filter pane displayed at top of View Alerts screen.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 172
testRunner.When("In the Message text box, type part or the entire description of an alert \'Test\' t" +
                    "hat is visible in the list in the main window.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 173
testRunner.And("Clicked Apply Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
testRunner.Then("Only alerts with descriptions matching the string entered in the filter message \'" +
                    "Test\' field should be displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts List - Filtering (Equipment)")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsList_FilteringEquipment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts List - Filtering (Equipment)", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 182
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 183
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 184
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 185
testRunner.When("Launched Eissa and started Simulator and selected device type \'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 186
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
testRunner.Given("Raised alert High Alarm on Booster Power, Low alarm on MB Motor Temperature, High" +
                    " Warning on Dry Pump Control,low warning on  Booster Control, Advisory on Seals " +
                    "Purge", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 188
testRunner.When("Navigated to Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 189
testRunner.Given("Selected Live Alerts List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 190
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 191
testRunner.And("In the System Name text box, type part or the entire name of a device \'NEW0001PM1" +
                    "\' that is visible in the list of alerts in the main window.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
testRunner.And("Clicked Apply Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
testRunner.Then("The Current Alerts screen should only display alerts for the equipment \'NEW0001PM" +
                    "1\' identified by the System Name string in the filter specification.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts List - Filtering (Maintenance Status)")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsList_FilteringMaintenanceStatus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts List - Filtering (Maintenance Status)", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 199
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 200
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 201
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 202
testRunner.And("Clicked the Create Alert button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
testRunner.Then("A \'Create Alert\' popup window should be displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 204
testRunner.When("Changed the Maintenance status drop down to \'Unacknowledged\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 205
testRunner.And("Entered \'Test Message Unacknowledged\' in the Default Alert Message textbox.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 206
testRunner.And("Clicked Create Alert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 207
testRunner.Then("The alert should be created \'The alert has been created\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 208
testRunner.And("Displayed in the View Alerts screen with message\'Test Message Unacknowledged\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 210
testRunner.Then("The filter section should pop-up.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 211
testRunner.When("set an alert to Closed clicked the alert in the main view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 212
testRunner.And("clicked maintenance status drop down, selected \'Closed\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
testRunner.And("clicked Apply button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
testRunner.And("Clicked and Hide Filter button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
testRunner.And("Clicked the Create Alert button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
testRunner.Then("A \'Create Alert\' popup window should be displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 217
testRunner.When("Changed the Maintenance status drop down to \'Assigned\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 218
testRunner.And("Entered \'Test Message Assigned\' in the Default Alert Message textbox.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
testRunner.And("Clicked Create Alert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 220
testRunner.Then("The alert should be created \'The alert has been created\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 221
testRunner.And("Displayed in the View Alerts screen with message\'Test Message Assigned\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 223
testRunner.Then("The filter section should pop-up.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 224
testRunner.When("set an alert to Closed clicked the alert in the main view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 225
testRunner.And("clicked maintenance status drop down, selected \'Closed\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
testRunner.And("clicked Apply button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
testRunner.And("Clicked and Hide Filter button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
testRunner.And("Clicked the Create Alert button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
testRunner.Then("A \'Create Alert\' popup window should be displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 230
testRunner.When("Changed the Maintenance status drop down to \'Work in Progress\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 231
testRunner.And("Entered \'Test Message Work in Progress\' in the Default Alert Message textbox.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 232
testRunner.And("Clicked Create Alert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 233
testRunner.Then("The alert should be created \'The alert has been created\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 234
testRunner.And("Displayed in the View Alerts screen with message\'Test Message Work in Progress\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 236
testRunner.Then("The filter section should pop-up.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 237
testRunner.When("set an alert to Closed clicked the alert in the main view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 238
testRunner.And("clicked maintenance status drop down, selected \'Closed\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
testRunner.And("clicked Apply button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 240
testRunner.And("Clicked and Hide Filter button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
testRunner.And("Clicked the Create Alert button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 242
testRunner.Then("A \'Create Alert\' popup window should be displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 243
testRunner.When("Changed the Maintenance status drop down to \'Pending\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 244
testRunner.And("Entered \'Test Message Work Pending\' in the Default Alert Message textbox.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 245
testRunner.And("Clicked Create Alert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
testRunner.Then("The alert should be created \'The alert has been created\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 247
testRunner.And("Displayed in the View Alerts screen with message\'Test Message Work Pending\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 248
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 249
testRunner.Then("The filter section should pop-up.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 250
testRunner.When("Clicked and Hide Filter button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 251
testRunner.And("set an alert to Closed clicked the alert in the main view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
testRunner.And("clicked maintenance status drop down, selected \'Closed\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
testRunner.And("clicked Apply button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 254
testRunner.And("In the filter, disable all of the ‘Maintenance Status’ checkboxes (apart from Clo" +
                    "sed which toggles with Unacknowledged)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 255
testRunner.And("Clicked Apply Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts List - Hide/Reset Filter")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsList_HideResetFilter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts List - Hide/Reset Filter", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 263
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 264
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 265
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 266
testRunner.When("Launched Eissa and started Simulator and selected device type \'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 267
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
testRunner.And("Navigated to Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 269
testRunner.Given("Raised alert High Alarm on Booster Power, Low alarm on MB Motor Temperature, High" +
                    " Warning on Dry Pump Control,low warning on  Booster Control, Advisory on Seals " +
                    "Purge", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 270
testRunner.And("Selected Live Alerts List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 272
testRunner.Then("Filter pane displayed at top of View Alerts screen.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 273
testRunner.When("Selected few filter options through the check boxes or enter valid text in text b" +
                    "oxes as shown in previous step", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 274
testRunner.And("Clicked Apply Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
testRunner.Then("Only Alerts matching with the applied filter option should be visible in the list" +
                    ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 276
testRunner.When("Clicked on Hide Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 277
testRunner.Then("The Filter panel should be hidden from the view.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 278
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 279
testRunner.Then("The filter panel should be displayed with last applied filter option marked.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 280
testRunner.When("Clicked on Reset Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 281
testRunner.Then("All the filter option previously applied should be removed and Alert list should " +
                    "be reset.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts List - Create Manual Alert")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsList_CreateManualAlert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts List - Create Manual Alert", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 286
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 287
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 288
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 289
testRunner.When("Launched Eissa and started Simulator and selected device type \'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 290
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 291
testRunner.And("I entered Equipment name, selected equipmentType\'All\', Cliked Find Equipment butt" +
                    "on, selected one equipmentName\'NEW0001PM1\' and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 293
testRunner.When("Navigated to Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 294
testRunner.Given("Selected Live Alerts List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 295
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 296
testRunner.When("Clicked the Create Alert button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 297
testRunner.Then("A \'Create Alert\' popup window should be displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 298
testRunner.When("Entered a search string in the Search \'001\' box.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 299
testRunner.And("Use the drop down list also to select a type of equipment \'All\'. Make sure this t" +
                    "ype corresponds with the name you have entered in the first box.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 300
testRunner.When("Clicked Find Equipment button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 301
testRunner.Then("A list of results is then shown \'NEW0001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 302
testRunner.When("Selected one of the pieces of equipment.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 303
testRunner.When("Entered \'Pump motor speed too high\' in the Default Alert Message textbox.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 304
testRunner.And("Entered a comment \'Test comment\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 305
testRunner.And("Clicked Create Alert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 306
testRunner.Then("The alert should be created \'The alert has been created\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 307
testRunner.And("The alert \'Pump motor speed too high\' should appear at the top of the Alert list " +
                    "and will remain until closed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts List - View/update alert detail and show history")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsList_ViewUpdateAlertDetailAndShowHistory()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts List - View/update alert detail and show history", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 312
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 313
testRunner.Given("I Added user with details \'testuser\' \'Test@123\' \'Test@123\' \'Client Name\' \'Edward\'" +
                    " \'test\' \'user\' and \'testuser@atlascopco.com\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 314
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 315
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 316
testRunner.When("Launched Eissa and started Simulator and selected device type \'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 317
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
testRunner.And("Navigated to Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
testRunner.And("Selected Live Alerts List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 320
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 321
testRunner.When("Clicked the Create Alert button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 322
testRunner.Then("A \'Create Alert\' popup window should be displayed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 323
testRunner.When("Entered a search string in the Search \'001\' box.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 324
testRunner.And("Use the drop down list also to select a type of equipment \'eZenith\'. Make sure th" +
                    "is type corresponds with the name you have entered in the first box.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 325
testRunner.When("Clicked Find Equipment button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 326
testRunner.Then("A list of results is then shown \'NEW0001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 327
testRunner.When("Selected one of the pieces of equipment.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 328
testRunner.When("Entered \'Pump motor speed too high\' in the Default Alert Message textbox.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 329
testRunner.And("Entered a comment \'Test comment\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 330
testRunner.And("Clicked Create Alert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 331
testRunner.Then("The alert should be created \'The alert has been created\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 332
testRunner.And("Appeared in the list \'Pump motor speed too high\'.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 333
testRunner.When("Clicked on the previously created alert in the list.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 334
testRunner.Then("A new window will pop-up with \'Alert Details\' tab selected on the screen.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 335
testRunner.When("updated maintenance status to \'Pending\' and assigned user \'testuser\'. Also added " +
                    "comment \'test updated comment\'.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 336
testRunner.And("Clicked close.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
testRunner.Then("Once closed open the same detail window again.\tThe Detail window should show upda" +
                    "ted detail in last step maintenance status as \'Pending\', assigned user as \'testu" +
                    "ser\' and comment \'test updated comment\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 338
testRunner.When("clicked on Alert History tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 339
testRunner.Then("User should able to see history of changes made on that alert with date-time, use" +
                    "r and detail.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts List - Review Alerts and Alert Details")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsList_ReviewAlertsAndAlertDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts List - Review Alerts and Alert Details", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 344
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 345
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 346
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 347
testRunner.When("Launched Eissa and started Simulator and selected device type \'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 348
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
testRunner.Given("Raised alert High Alarm on Booster Power, Low alarm on MB Motor Temperature, High" +
                    " Warning on Dry Pump Control,low warning on  Booster Control, Advisory on Seals " +
                    "Purge", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 350
testRunner.When("I entered Equipment name, selected equipmentType\'All\', Cliked Find Equipment butt" +
                    "on, selected one equipmentName\'NEW0001PM1\' and clicked Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 351
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 352
testRunner.When("Navigated to Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 353
testRunner.And("Selected Live Alerts List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
testRunner.When("Clicked on an alert in the list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 355
testRunner.Then("Alert details to be displayed with msg \'System configuration fault\', alert type a" +
                    "s \'Major Alarm\' , equipmenttype as\'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 356
testRunner.When("Clicked on tab: [Alert Details]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 357
testRunner.Then("Appropriate settings to be displayed for Alert details tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 358
testRunner.When("Clickd on tab: [Alert History]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 359
testRunner.Then("Appropriate settings to be displayed for Alert History details tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 360
testRunner.When("Clickd on tab: [Inhbit Settings]", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 361
testRunner.Then("Appropriate settings to be displayed for Inhibit Settings tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 362
testRunner.When("Selected another alert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 363
testRunner.Then("Alert details to be displayed with msg \'System configuration fault\', alert type a" +
                    "s \'Minor Alarm\' , equipmenttype as\'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Live Alerts Filter by message")]
        [NUnit.Framework.CategoryAttribute("SplitServer")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        [NUnit.Framework.CategoryAttribute("LiveAlertsList")]
        public virtual void LiveAlertsFilterByMessage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Live Alerts Filter by message", null, new string[] {
                        "SplitServer",
                        "SingleServer",
                        "LiveAlertsList"});
#line 368
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
this.FeatureBackground();
#line 369
testRunner.Given("Navigated to Live Alerts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 370
testRunner.When("cleared all previous alerts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 371
testRunner.When("Launched Eissa and started Simulator and selected device type \'NEW0001PM1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 372
testRunner.And("I commissioned device with following details \'eZenith\', \'50000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 373
testRunner.Given("Raised alert High Alarm on Booster Power, Low alarm on MB Motor Temperature, High" +
                    " Warning on Dry Pump Control,low warning on  Booster Control, Advisory on Seals " +
                    "Purge", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 374
testRunner.When("Navigated to Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 375
testRunner.And("Selected Live Alerts List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 376
testRunner.Then("current live alerts should be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 377
testRunner.When("Clicked the Show Filter button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 378
testRunner.Then("The filter section should pop-up showing several fields that can be used to searc" +
                    "h for a particular alert.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 379
testRunner.When("Entered Message \'System configuration fault\' to filter for alerts from the list,", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 380
testRunner.And("Clicked Apply Filter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 381
testRunner.Then("Alerts matching to the message \'System configuration fault\' filter will be displa" +
                    "yed in the alerts list.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

