// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Edwards.Scada.Test.Framework.TestCases.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MQTTTests")]
    public partial class MQTTTestsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MQTTTests.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MQTTTests", "\tIn order to verify MQTT feature\r\n\tAs a verifier\r\n\tI want to check MQTT works fin" +
                    "e in integration with EdCentra", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Configure MQTT in AgentConfiguration")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void ConfigureMQTTInAgentConfiguration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Configure MQTT in AgentConfiguration", null, new string[] {
                        "SingleServer"});
#line 8
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
 testRunner.When("I run Agent Configuration (shortcut on desktop)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.When("I set pin value \'9110\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.And("I added \'MQTT\' agents", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("I selected PC Interface Network Id card under Relay tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Enable VI Management in EdCentra")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void EnableVIManagementInEdCentra()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Enable VI Management in EdCentra", null, new string[] {
                        "SingleServer"});
#line 15
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 16
 testRunner.When("I launch and connect SSMS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("I insert group permission to enable VI Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 18
 testRunner.When("I Open EDCENTRA application and I enter the username as \'administrator\' and passw" +
                    "ord as \'toolkit\' and clicked login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.Then("I click Configure to see VI Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VISimulator commission device")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void VISimulatorCommissionDevice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VISimulator commission device", null, new string[] {
                        "SingleServer"});
#line 22
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 23
testRunner.Given("Open EDCENTRA application URL in the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
testRunner.When("I enter the username as \'administrator\' and password as \'toolkit\' and clicked log" +
                    "in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
testRunner.When("I click the DeviceExplorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
testRunner.Then("I should be navigated to the DeviceExplorer page in EdCentra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 28
testRunner.When("I click on the system icon - Add Folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
testRunner.And("I entered the folder name and clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
testRunner.Then("I should be able to see the folder added successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
testRunner.When("I clicked the OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
testRunner.Then("I should be able to see the newly added Folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
testRunner.When("I clicked the Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
testRunner.And("I delete all the existing Equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
testRunner.When("I run the VIsimulator to get the VI device communicating with EdCentra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
testRunner.Then("I commission the VISimulator as equipment Name \'viVISIM0000\' equipmentType \'EdCen" +
                    "tra VIsion Box\' and serial number \'VISIM0000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 37
testRunner.And("I see the VISimulator connectivity established in folder \'viVISIM0000\' and the ba" +
                    "ckground color is green", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
testRunner.When("I configure 3 in VISimulator to disconnect the connectivity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
testRunner.Then("I see the background color changed in folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VISimulator - Applying Logging Profile")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void VISimulator_ApplyingLoggingProfile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VISimulator - Applying Logging Profile", null, new string[] {
                        "SingleServer"});
#line 42
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 43
testRunner.Given("Open EDCENTRA application URL in the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
testRunner.When("I enter the username as \'administrator\' and password as \'toolkit\' and clicked log" +
                    "in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
testRunner.When("I click the DeviceExplorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
testRunner.Then("I should be navigated to the DeviceExplorer page in EdCentra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 48
testRunner.When("I click on the system icon - Add Folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
testRunner.And("I entered the folder name and clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.Then("I should be able to see the folder added successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 51
testRunner.When("I clicked the OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
testRunner.Then("I should be able to see the newly added Folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
testRunner.When("I clicked the Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
testRunner.And("I delete all the existing Equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
testRunner.When("I run the VIsimulator to get the VI device communicating with EdCentra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
testRunner.Then("I commission the VISimulator as equipment Name \'viVISIM0000\' equipmentType \'EdCen" +
                    "tra VIsion Box\' and serial number \'VISIM0000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
testRunner.When("I click the Logging option within the [Configure \\/] menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
testRunner.Then("the Logging tab is opened in Configure", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 59
testRunner.When("I Click on the Create Profile button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
testRunner.Then("the Create Profile form is displayed in EdCentra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 61
testRunner.When("I provide a name \'LoggingTest\' and select an equipment type\'EdCentra VIsion Box\' " +
                    "for the profile. Click Create.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
testRunner.Then("The form expand and shows the detail tab which lists parameter for the equipment " +
                    "type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Parameter",
                        "TimeIntervalforNormal",
                        "TimeIntervalforAlert",
                        "TimeIntervalforDelta"});
            table1.AddRow(new string[] {
                        "Ch1 VI 1 (VI)",
                        "1 Minute",
                        "1 Hour",
                        "0"});
#line 63
testRunner.When("I Make a number of selections from the list of available parameters and change th" +
                    "e values for the Normal, Alert, and Delta.Click Apply.", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Parameter"});
            table2.AddRow(new string[] {
                        "Ch1 VI 1 (VI)"});
#line 73
testRunner.Then("The screen will show applied values for Normal / Alert and Delta fields for the p" +
                    "arameter.The screen will only list parameters added in profile", ((string)(null)), table2, "Then ");
#line 76
testRunner.When("I click on the Equipments tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
testRunner.Then("I should be navigated to the Equipments tab in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 78
testRunner.When("I Find the equipment using equipment description and add Equipments \'viVISIM0000\'" +
                    " to Assigned Equipment list using > and >> button then Click Apply", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
testRunner.Then("the changes have been applied message will be displayed on the screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 80
testRunner.When("I navigate to Historian -> Equipment Data Select a piece of System and Equipment " +
                    "\'viVISIM0000\' that is logging data (and also of which you have another of this e" +
                    "xact equipment type)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
testRunner.Then("Parameter\'Ch1 VI 1 (VI)\'listed of which we have data to plot for the Equipment\'vi" +
                    "VISIM0000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VI Management Details - Serial and Part Number")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void VIManagementDetails_SerialAndPartNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VI Management Details - Serial and Part Number", null, new string[] {
                        "SingleServer"});
#line 84
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 85
testRunner.Given("Open EDCENTRA application URL in the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
testRunner.When("I enter the username as \'administrator\' and password as \'toolkit\' and clicked log" +
                    "in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
testRunner.When("I click the DeviceExplorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
testRunner.Then("I should be navigated to the DeviceExplorer page in EdCentra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 89
testRunner.When("I click on the system icon - Add Folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
testRunner.And("I entered the folder name and clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
testRunner.Then("I should be able to see the folder added successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 92
testRunner.When("I clicked the OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 93
testRunner.Then("I should be able to see the newly added Folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 94
testRunner.When("I clicked the Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
testRunner.And("I delete all the existing Equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
testRunner.When("I run the VIsimulator to get the VI device communicating with EdCentra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
testRunner.Then("I commission the VISimulator as equipment Name \'viVISIM0000\' equipmentType \'EdCen" +
                    "tra VIsion Box\' and serial number \'VISIM0000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 98
testRunner.When("I click the VI Management option within the [Configure \\/] menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
testRunner.Then("I see the VI Management page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 100
testRunner.When("I click on the device and Details tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 101
testRunner.Then("I verify the serial number of the device as \'VISIM0000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 102
testRunner.Then("I verify the part number of the device as \'D37700000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VI Management Administer - Assigned Equipment")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void VIManagementAdminister_AssignedEquipment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VI Management Administer - Assigned Equipment", null, new string[] {
                        "SingleServer"});
#line 106
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 107
testRunner.Given("Open EDCENTRA application URL in the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 108
testRunner.When("I enter the username as \'administrator\' and password as \'toolkit\' and clicked log" +
                    "in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
testRunner.When("I click the DeviceExplorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 110
testRunner.Then("I should be navigated to the DeviceExplorer page in EdCentra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 111
testRunner.When("I click on the system icon - Add Folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
testRunner.And("I entered the folder name and clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
testRunner.Then("I should be able to see the folder added successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 114
testRunner.When("I clicked the OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 115
testRunner.Then("I should be able to see the newly added Folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 116
testRunner.When("I clicked the Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
testRunner.And("I delete all the existing Equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
testRunner.And("I launched Turbo simulator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
testRunner.And("I configure Turbo Simulator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
testRunner.And("I select an equipmentName \'TURBO4001\' equipmentType \'Turbo Pump\' device iPPortNum" +
                    "ber\'4001\'.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
testRunner.Then("I should be able to see Equipment Added Successfully message and after clicking O" +
                    "k button, added Equipment should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 122
testRunner.When("I run the VIsimulator to get the VI device communicating with EdCentra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 123
testRunner.Then("I commission the VISimulator as equipment Name \'viVISIM0000\' equipmentType \'EdCen" +
                    "tra VIsion Box\' and serial number \'VISIM0000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 124
testRunner.When("I click the VI Management option within the [Configure \\/] menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
testRunner.Then("I see the VI Management page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 126
testRunner.When("I click on the device, Administer tab and Choose button in Assigned Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 127
testRunner.Then("I see the Linked System", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 128
testRunner.When("I click the Find Equipment button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 129
testRunner.Then("I see the turbo equipment is listed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 130
testRunner.When("I choose the turbo equipment and click OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
testRunner.Then("I verify the turbo equipment displayed near Choose button in Assigned Equipment o" +
                    "f Administer Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 132
testRunner.When("I move to Device Explorer and click create commission the VISimulator as equipmen" +
                    "t Name \'viVISIM0001\' equipmentType \'EdCentra VIsion Box\' and serial number \'VISI" +
                    "M0001\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
testRunner.Then("I click Linked System Choose button and select Turbo pump to see no equipment lis" +
                    "ted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("VI Management Details - Unit Up Time")]
        [NUnit.Framework.CategoryAttribute("SingleServer")]
        public virtual void VIManagementDetails_UnitUpTime()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("VI Management Details - Unit Up Time", null, new string[] {
                        "SingleServer"});
#line 137
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 138
testRunner.Given("Open EDCENTRA application URL in the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 139
testRunner.When("I enter the username as \'administrator\' and password as \'toolkit\' and clicked log" +
                    "in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 140
testRunner.When("I click the DeviceExplorer link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 141
testRunner.Then("I should be navigated to the DeviceExplorer page in EdCentra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 142
testRunner.When("I click on the system icon - Add Folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 143
testRunner.And("I entered the folder name and clicked on Add button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
testRunner.Then("I should be able to see the folder added successfully message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 145
testRunner.When("I clicked the OK button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
testRunner.Then("I should be able to see the newly added Folder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 147
testRunner.When("I clicked the Find Equipment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 148
testRunner.And("I delete all the existing Equipments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
testRunner.When("I run the VIsimulator to get the VI device communicating with EdCentra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 150
testRunner.Then("I commission the VISimulator as equipment Name \'viVISIM0000\' equipmentType \'EdCen" +
                    "tra VIsion Box\' and serial number \'VISIM0000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 151
testRunner.When("I click the VI Management option within the [Configure \\/] menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 152
testRunner.Then("I see the VI Management page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 153
testRunner.When("I click on the device and Details tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 154
testRunner.Then("I verify the UnitUpTime of the device updating at regular intervals", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

